// third_party/blink/public/mojom/interest_group/interest_group_types.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'third_party/blink/public/mojom/interest_group/interest_group_types.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('blink.mojom');
  var time$ =
      mojo.internal.exposeNamespace('mojoBase.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'mojo/public/mojom/base/time.mojom', '../../../../../mojo/public/mojom/base/time.mojom.js');
  }
  var origin$ =
      mojo.internal.exposeNamespace('url.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'url/mojom/origin.mojom', '../../../../../url/mojom/origin.mojom.js');
  }
  var url$ =
      mojo.internal.exposeNamespace('url.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'url/mojom/url.mojom', '../../../../../url/mojom/url.mojom.js');
  }



  function InterestGroupAd(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  InterestGroupAd.prototype.initDefaults_ = function() {
    this.renderUrl = null;
    this.metadata = null;
  };
  InterestGroupAd.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  InterestGroupAd.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate InterestGroupAd.renderUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate InterestGroupAd.metadata
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 8, true)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  InterestGroupAd.encodedSize = codec.kStructHeaderSize + 16;

  InterestGroupAd.decode = function(decoder) {
    var packed;
    var val = new InterestGroupAd();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.renderUrl =
        decoder.decodeStructPointer(url$.Url);
    val.metadata =
        decoder.decodeStruct(codec.NullableString);
    return val;
  };

  InterestGroupAd.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(InterestGroupAd.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(url$.Url, val.renderUrl);
    encoder.encodeStruct(codec.NullableString, val.metadata);
  };
  function InterestGroup(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  InterestGroup.prototype.initDefaults_ = function() {
    this.expiry = null;
    this.owner = null;
    this.name = null;
    this.biddingUrl = null;
    this.updateUrl = null;
    this.trustedBiddingSignalsUrl = null;
    this.trustedBiddingSignalsKeys = null;
    this.userBiddingSignals = null;
    this.ads = null;
  };
  InterestGroup.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  InterestGroup.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 80}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate InterestGroup.expiry
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, time$.Time, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate InterestGroup.owner
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, origin$.Origin, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate InterestGroup.name
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 16, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate InterestGroup.biddingUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 24, url$.Url, true);
    if (err !== validator.validationError.NONE)
        return err;


    // validate InterestGroup.updateUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 32, url$.Url, true);
    if (err !== validator.validationError.NONE)
        return err;


    // validate InterestGroup.trustedBiddingSignalsUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 40, url$.Url, true);
    if (err !== validator.validationError.NONE)
        return err;


    // validate InterestGroup.trustedBiddingSignalsKeys
    err = messageValidator.validateArrayPointer(offset + codec.kStructHeaderSize + 48, 8, codec.String, true, [0, 0], 0);
    if (err !== validator.validationError.NONE)
        return err;


    // validate InterestGroup.userBiddingSignals
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 56, true)
    if (err !== validator.validationError.NONE)
        return err;


    // validate InterestGroup.ads
    err = messageValidator.validateArrayPointer(offset + codec.kStructHeaderSize + 64, 8, new codec.PointerTo(InterestGroupAd), true, [0], 0);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  InterestGroup.encodedSize = codec.kStructHeaderSize + 72;

  InterestGroup.decode = function(decoder) {
    var packed;
    var val = new InterestGroup();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.expiry =
        decoder.decodeStructPointer(time$.Time);
    val.owner =
        decoder.decodeStructPointer(origin$.Origin);
    val.name =
        decoder.decodeStruct(codec.String);
    val.biddingUrl =
        decoder.decodeStructPointer(url$.Url);
    val.updateUrl =
        decoder.decodeStructPointer(url$.Url);
    val.trustedBiddingSignalsUrl =
        decoder.decodeStructPointer(url$.Url);
    val.trustedBiddingSignalsKeys =
        decoder.decodeArrayPointer(codec.String);
    val.userBiddingSignals =
        decoder.decodeStruct(codec.NullableString);
    val.ads =
        decoder.decodeArrayPointer(new codec.PointerTo(InterestGroupAd));
    return val;
  };

  InterestGroup.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(InterestGroup.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(time$.Time, val.expiry);
    encoder.encodeStructPointer(origin$.Origin, val.owner);
    encoder.encodeStruct(codec.String, val.name);
    encoder.encodeStructPointer(url$.Url, val.biddingUrl);
    encoder.encodeStructPointer(url$.Url, val.updateUrl);
    encoder.encodeStructPointer(url$.Url, val.trustedBiddingSignalsUrl);
    encoder.encodeArrayPointer(codec.String, val.trustedBiddingSignalsKeys);
    encoder.encodeStruct(codec.NullableString, val.userBiddingSignals);
    encoder.encodeArrayPointer(new codec.PointerTo(InterestGroupAd), val.ads);
  };
  function AllBuyers(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  AllBuyers.prototype.initDefaults_ = function() {
  };
  AllBuyers.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  AllBuyers.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  AllBuyers.encodedSize = codec.kStructHeaderSize + 0;

  AllBuyers.decode = function(decoder) {
    var packed;
    var val = new AllBuyers();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  AllBuyers.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(AllBuyers.encodedSize);
    encoder.writeUint32(0);
  };
  function AuctionAdConfig(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  AuctionAdConfig.prototype.initDefaults_ = function() {
    this.seller = null;
    this.decisionLogicUrl = null;
    this.interestGroupBuyers = null;
    this.auctionSignals = null;
    this.sellerSignals = null;
    this.perBuyerSignals = null;
  };
  AuctionAdConfig.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  AuctionAdConfig.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 64}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate AuctionAdConfig.seller
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, origin$.Origin, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate AuctionAdConfig.decisionLogicUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate AuctionAdConfig.interestGroupBuyers
    err = messageValidator.validateUnion(offset + codec.kStructHeaderSize + 16, InterestGroupBuyers, true);
    if (err !== validator.validationError.NONE)
        return err;


    // validate AuctionAdConfig.auctionSignals
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 32, true)
    if (err !== validator.validationError.NONE)
        return err;


    // validate AuctionAdConfig.sellerSignals
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 40, true)
    if (err !== validator.validationError.NONE)
        return err;


    // validate AuctionAdConfig.perBuyerSignals
    err = messageValidator.validateMapPointer(offset + codec.kStructHeaderSize + 48, true, new codec.PointerTo(origin$.Origin), codec.String, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  AuctionAdConfig.encodedSize = codec.kStructHeaderSize + 56;

  AuctionAdConfig.decode = function(decoder) {
    var packed;
    var val = new AuctionAdConfig();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.seller =
        decoder.decodeStructPointer(origin$.Origin);
    val.decisionLogicUrl =
        decoder.decodeStructPointer(url$.Url);
    val.interestGroupBuyers =
        decoder.decodeStruct(InterestGroupBuyers);
    val.auctionSignals =
        decoder.decodeStruct(codec.NullableString);
    val.sellerSignals =
        decoder.decodeStruct(codec.NullableString);
    val.perBuyerSignals =
        decoder.decodeMapPointer(new codec.PointerTo(origin$.Origin), codec.String);
    return val;
  };

  AuctionAdConfig.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(AuctionAdConfig.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(origin$.Origin, val.seller);
    encoder.encodeStructPointer(url$.Url, val.decisionLogicUrl);
    encoder.encodeStruct(InterestGroupBuyers, val.interestGroupBuyers);
    encoder.encodeStruct(codec.NullableString, val.auctionSignals);
    encoder.encodeStruct(codec.NullableString, val.sellerSignals);
    encoder.encodeMapPointer(new codec.PointerTo(origin$.Origin), codec.String, val.perBuyerSignals);
  };

  function InterestGroupBuyers(value) {
    this.initDefault_();
    this.initValue_(value);
  }


  InterestGroupBuyers.Tags = {
    buyers: 0,
    allBuyers: 1,
  };

  InterestGroupBuyers.prototype.initDefault_ = function() {
    this.$data = null;
    this.$tag = undefined;
  }

  InterestGroupBuyers.prototype.initValue_ = function(value) {
    if (value == undefined) {
      return;
    }

    var keys = Object.keys(value);
    if (keys.length == 0) {
      return;
    }

    if (keys.length > 1) {
      throw new TypeError("You may set only one member on a union.");
    }

    var fields = [
        "buyers",
        "allBuyers",
    ];

    if (fields.indexOf(keys[0]) < 0) {
      throw new ReferenceError(keys[0] + " is not a InterestGroupBuyers member.");

    }

    this[keys[0]] = value[keys[0]];
  }
  Object.defineProperty(InterestGroupBuyers.prototype, "buyers", {
    get: function() {
      if (this.$tag != InterestGroupBuyers.Tags.buyers) {
        throw new ReferenceError(
            "InterestGroupBuyers.buyers is not currently set.");
      }
      return this.$data;
    },

    set: function(value) {
      this.$tag = InterestGroupBuyers.Tags.buyers;
      this.$data = value;
    }
  });
  Object.defineProperty(InterestGroupBuyers.prototype, "allBuyers", {
    get: function() {
      if (this.$tag != InterestGroupBuyers.Tags.allBuyers) {
        throw new ReferenceError(
            "InterestGroupBuyers.allBuyers is not currently set.");
      }
      return this.$data;
    },

    set: function(value) {
      this.$tag = InterestGroupBuyers.Tags.allBuyers;
      this.$data = value;
    }
  });


    InterestGroupBuyers.encode = function(encoder, val) {
      if (val == null) {
        encoder.writeUint64(0);
        encoder.writeUint64(0);
        return;
      }
      if (val.$tag == undefined) {
        throw new TypeError("Cannot encode unions with an unknown member set.");
      }

      encoder.writeUint32(16);
      encoder.writeUint32(val.$tag);
      switch (val.$tag) {
        case InterestGroupBuyers.Tags.buyers:
          encoder.encodeArrayPointer(new codec.PointerTo(origin$.Origin), val.buyers);
          break;
        case InterestGroupBuyers.Tags.allBuyers:
          encoder.encodeStructPointer(AllBuyers, val.allBuyers);
          break;
      }
      encoder.align();
    };


    InterestGroupBuyers.decode = function(decoder) {
      var size = decoder.readUint32();
      if (size == 0) {
        decoder.readUint32();
        decoder.readUint64();
        return null;
      }

      var result = new InterestGroupBuyers();
      var tag = decoder.readUint32();
      switch (tag) {
        case InterestGroupBuyers.Tags.buyers:
          result.buyers = decoder.decodeArrayPointer(new codec.PointerTo(origin$.Origin));
          break;
        case InterestGroupBuyers.Tags.allBuyers:
          result.allBuyers = decoder.decodeStructPointer(AllBuyers);
          break;
      }
      decoder.align();

      return result;
    };


    InterestGroupBuyers.validate = function(messageValidator, offset) {
      var size = messageValidator.decodeUnionSize(offset);
      if (size != 16) {
        return validator.validationError.INVALID_UNION_SIZE;
      }

      var tag = messageValidator.decodeUnionTag(offset);
      var data_offset = offset + 8;
      var err;
      switch (tag) {
        case InterestGroupBuyers.Tags.buyers:
          

    // validate InterestGroupBuyers.buyers
    err = messageValidator.validateArrayPointer(data_offset, 8, new codec.PointerTo(origin$.Origin), false, [0], 0);
    if (err !== validator.validationError.NONE)
        return err;
          break;
        case InterestGroupBuyers.Tags.allBuyers:
          

    // validate InterestGroupBuyers.allBuyers
    err = messageValidator.validateStructPointer(data_offset, AllBuyers, false);
    if (err !== validator.validationError.NONE)
        return err;
          break;
      }

      return validator.validationError.NONE;
    };

  InterestGroupBuyers.encodedSize = 16;
  exports.InterestGroupAd = InterestGroupAd;
  exports.InterestGroup = InterestGroup;
  exports.AllBuyers = AllBuyers;
  exports.AuctionAdConfig = AuctionAdConfig;
  exports.InterestGroupBuyers = InterestGroupBuyers;
})();