// chrome/browser/ui/webui/new_tab_page/new_tab_page.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'chrome/browser/ui/webui/new_tab_page/new_tab_page.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('newTabPage.mojom');
  var realbox$ =
      mojo.internal.exposeNamespace('realbox.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'chrome/browser/ui/webui/realbox/realbox.mojom', '../realbox/realbox.mojom.js');
  }
  var skcolor$ =
      mojo.internal.exposeNamespace('skia.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'skia/public/mojom/skcolor.mojom', '../../../../../skia/public/mojom/skcolor.mojom.js');
  }
  var most_visited$ =
      mojo.internal.exposeNamespace('mostVisited.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'ui/webui/resources/cr_components/most_visited/most_visited.mojom', '../../../../../ui/webui/resources/cr_components/most_visited/most_visited.mojom.js');
  }
  var url$ =
      mojo.internal.exposeNamespace('url.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'url/mojom/url.mojom', '../../../../../url/mojom/url.mojom.js');
  }


  var DoodleImageType = {};
  DoodleImageType.kAnimation = 0;
  DoodleImageType.kCta = 1;
  DoodleImageType.kStatic = 2;
  DoodleImageType.MIN_VALUE = 0;
  DoodleImageType.MAX_VALUE = 2;

  DoodleImageType.isKnownEnumValue = function(value) {
    switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    }
    return false;
  };

  DoodleImageType.toKnownEnumValue = function(value) {
    return value;
  };

  DoodleImageType.validate = function(enumValue) {
    const isExtensible = false;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };
  var DoodleShareChannel = {};
  DoodleShareChannel.kFacebook = 0;
  DoodleShareChannel.kTwitter = 1;
  DoodleShareChannel.kEmail = 2;
  DoodleShareChannel.kLinkCopy = 3;
  DoodleShareChannel.MIN_VALUE = 0;
  DoodleShareChannel.MAX_VALUE = 3;

  DoodleShareChannel.isKnownEnumValue = function(value) {
    switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    }
    return false;
  };

  DoodleShareChannel.toKnownEnumValue = function(value) {
    return value;
  };

  DoodleShareChannel.validate = function(enumValue) {
    const isExtensible = false;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };
  var CustomizeDialogAction = {};
  CustomizeDialogAction.kCancelClicked = 0;
  CustomizeDialogAction.kDoneClicked = 1;
  CustomizeDialogAction.kOpenClicked = 2;
  CustomizeDialogAction.kBackgroundsBackClicked = 3;
  CustomizeDialogAction.kBackgroundsNoBackgroundSelected = 4;
  CustomizeDialogAction.kBackgroundsCollectionOpened = 5;
  CustomizeDialogAction.kBackgroundsRefreshToggleClicked = 6;
  CustomizeDialogAction.kBackgroundsImageSelected = 7;
  CustomizeDialogAction.kBackgroundsUploadFromDeviceClicked = 8;
  CustomizeDialogAction.kShortcutsCustomLinksClicked = 9;
  CustomizeDialogAction.kShortcutsMostVisitedClicked = 10;
  CustomizeDialogAction.kShortcutsVisibilityToggleClicked = 11;
  CustomizeDialogAction.MIN_VALUE = 0;
  CustomizeDialogAction.MAX_VALUE = 11;

  CustomizeDialogAction.isKnownEnumValue = function(value) {
    switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    }
    return false;
  };

  CustomizeDialogAction.toKnownEnumValue = function(value) {
    return value;
  };

  CustomizeDialogAction.validate = function(enumValue) {
    const isExtensible = false;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };

  function BackgroundCollection(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  BackgroundCollection.prototype.initDefaults_ = function() {
    this.id = null;
    this.label = null;
    this.previewImageUrl = null;
  };
  BackgroundCollection.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  BackgroundCollection.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate BackgroundCollection.id
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate BackgroundCollection.label
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 8, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate BackgroundCollection.previewImageUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  BackgroundCollection.encodedSize = codec.kStructHeaderSize + 24;

  BackgroundCollection.decode = function(decoder) {
    var packed;
    var val = new BackgroundCollection();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.id =
        decoder.decodeStruct(codec.String);
    val.label =
        decoder.decodeStruct(codec.String);
    val.previewImageUrl =
        decoder.decodeStructPointer(url$.Url);
    return val;
  };

  BackgroundCollection.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(BackgroundCollection.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.id);
    encoder.encodeStruct(codec.String, val.label);
    encoder.encodeStructPointer(url$.Url, val.previewImageUrl);
  };
  function CollectionImage(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  CollectionImage.prototype.initDefaults_ = function() {
    this.attribution1 = null;
    this.attribution2 = null;
    this.attributionUrl = null;
    this.imageUrl = null;
    this.previewImageUrl = null;
  };
  CollectionImage.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  CollectionImage.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 48}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate CollectionImage.attribution1
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate CollectionImage.attribution2
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 8, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate CollectionImage.attributionUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate CollectionImage.imageUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 24, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate CollectionImage.previewImageUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 32, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  CollectionImage.encodedSize = codec.kStructHeaderSize + 40;

  CollectionImage.decode = function(decoder) {
    var packed;
    var val = new CollectionImage();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.attribution1 =
        decoder.decodeStruct(codec.String);
    val.attribution2 =
        decoder.decodeStruct(codec.String);
    val.attributionUrl =
        decoder.decodeStructPointer(url$.Url);
    val.imageUrl =
        decoder.decodeStructPointer(url$.Url);
    val.previewImageUrl =
        decoder.decodeStructPointer(url$.Url);
    return val;
  };

  CollectionImage.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(CollectionImage.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.attribution1);
    encoder.encodeStruct(codec.String, val.attribution2);
    encoder.encodeStructPointer(url$.Url, val.attributionUrl);
    encoder.encodeStructPointer(url$.Url, val.imageUrl);
    encoder.encodeStructPointer(url$.Url, val.previewImageUrl);
  };
  function BackgroundImage(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  BackgroundImage.prototype.initDefaults_ = function() {
    this.url = null;
    this.url2x = null;
    this.attributionUrl = null;
    this.size = null;
    this.repeatX = null;
    this.repeatY = null;
    this.positionX = null;
    this.positionY = null;
  };
  BackgroundImage.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  BackgroundImage.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 72}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate BackgroundImage.url
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate BackgroundImage.url2x
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, url$.Url, true);
    if (err !== validator.validationError.NONE)
        return err;


    // validate BackgroundImage.attributionUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, url$.Url, true);
    if (err !== validator.validationError.NONE)
        return err;


    // validate BackgroundImage.size
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 24, true)
    if (err !== validator.validationError.NONE)
        return err;


    // validate BackgroundImage.repeatX
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 32, true)
    if (err !== validator.validationError.NONE)
        return err;


    // validate BackgroundImage.repeatY
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 40, true)
    if (err !== validator.validationError.NONE)
        return err;


    // validate BackgroundImage.positionX
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 48, true)
    if (err !== validator.validationError.NONE)
        return err;


    // validate BackgroundImage.positionY
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 56, true)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  BackgroundImage.encodedSize = codec.kStructHeaderSize + 64;

  BackgroundImage.decode = function(decoder) {
    var packed;
    var val = new BackgroundImage();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.url =
        decoder.decodeStructPointer(url$.Url);
    val.url2x =
        decoder.decodeStructPointer(url$.Url);
    val.attributionUrl =
        decoder.decodeStructPointer(url$.Url);
    val.size =
        decoder.decodeStruct(codec.NullableString);
    val.repeatX =
        decoder.decodeStruct(codec.NullableString);
    val.repeatY =
        decoder.decodeStruct(codec.NullableString);
    val.positionX =
        decoder.decodeStruct(codec.NullableString);
    val.positionY =
        decoder.decodeStruct(codec.NullableString);
    return val;
  };

  BackgroundImage.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(BackgroundImage.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(url$.Url, val.url);
    encoder.encodeStructPointer(url$.Url, val.url2x);
    encoder.encodeStructPointer(url$.Url, val.attributionUrl);
    encoder.encodeStruct(codec.NullableString, val.size);
    encoder.encodeStruct(codec.NullableString, val.repeatX);
    encoder.encodeStruct(codec.NullableString, val.repeatY);
    encoder.encodeStruct(codec.NullableString, val.positionX);
    encoder.encodeStruct(codec.NullableString, val.positionY);
  };
  function Theme(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  Theme.prototype.initDefaults_ = function() {
    this.textColor = null;
    this.backgroundColor = null;
    this.isDefault = false;
    this.isDark = false;
    this.logoColor = null;
    this.dailyRefreshCollectionId = null;
    this.backgroundImage = null;
    this.backgroundImageAttribution1 = null;
    this.backgroundImageAttribution2 = null;
    this.backgroundImageAttributionUrl = null;
    this.mostVisited = null;
    this.searchBox = null;
  };
  Theme.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  Theme.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 96}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate Theme.textColor
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, skcolor$.SkColor, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate Theme.backgroundColor
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, skcolor$.SkColor, false);
    if (err !== validator.validationError.NONE)
        return err;




    // validate Theme.logoColor
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 24, skcolor$.SkColor, true);
    if (err !== validator.validationError.NONE)
        return err;


    // validate Theme.dailyRefreshCollectionId
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 32, true)
    if (err !== validator.validationError.NONE)
        return err;


    // validate Theme.backgroundImage
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 40, BackgroundImage, true);
    if (err !== validator.validationError.NONE)
        return err;


    // validate Theme.backgroundImageAttribution1
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 48, true)
    if (err !== validator.validationError.NONE)
        return err;


    // validate Theme.backgroundImageAttribution2
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 56, true)
    if (err !== validator.validationError.NONE)
        return err;


    // validate Theme.backgroundImageAttributionUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 64, url$.Url, true);
    if (err !== validator.validationError.NONE)
        return err;


    // validate Theme.mostVisited
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 72, most_visited$.MostVisitedTheme, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate Theme.searchBox
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 80, realbox$.SearchBoxTheme, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  Theme.encodedSize = codec.kStructHeaderSize + 88;

  Theme.decode = function(decoder) {
    var packed;
    var val = new Theme();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.textColor =
        decoder.decodeStructPointer(skcolor$.SkColor);
    val.backgroundColor =
        decoder.decodeStructPointer(skcolor$.SkColor);
    packed = decoder.readUint8();
    val.isDefault = (packed >> 0) & 1 ? true : false;
    val.isDark = (packed >> 1) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.logoColor =
        decoder.decodeStructPointer(skcolor$.SkColor);
    val.dailyRefreshCollectionId =
        decoder.decodeStruct(codec.NullableString);
    val.backgroundImage =
        decoder.decodeStructPointer(BackgroundImage);
    val.backgroundImageAttribution1 =
        decoder.decodeStruct(codec.NullableString);
    val.backgroundImageAttribution2 =
        decoder.decodeStruct(codec.NullableString);
    val.backgroundImageAttributionUrl =
        decoder.decodeStructPointer(url$.Url);
    val.mostVisited =
        decoder.decodeStructPointer(most_visited$.MostVisitedTheme);
    val.searchBox =
        decoder.decodeStructPointer(realbox$.SearchBoxTheme);
    return val;
  };

  Theme.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(Theme.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(skcolor$.SkColor, val.textColor);
    encoder.encodeStructPointer(skcolor$.SkColor, val.backgroundColor);
    packed = 0;
    packed |= (val.isDefault & 1) << 0
    packed |= (val.isDark & 1) << 1
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStructPointer(skcolor$.SkColor, val.logoColor);
    encoder.encodeStruct(codec.NullableString, val.dailyRefreshCollectionId);
    encoder.encodeStructPointer(BackgroundImage, val.backgroundImage);
    encoder.encodeStruct(codec.NullableString, val.backgroundImageAttribution1);
    encoder.encodeStruct(codec.NullableString, val.backgroundImageAttribution2);
    encoder.encodeStructPointer(url$.Url, val.backgroundImageAttributionUrl);
    encoder.encodeStructPointer(most_visited$.MostVisitedTheme, val.mostVisited);
    encoder.encodeStructPointer(realbox$.SearchBoxTheme, val.searchBox);
  };
  function DoodleShareButton(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  DoodleShareButton.prototype.initDefaults_ = function() {
    this.x = 0;
    this.y = 0;
    this.backgroundColor = null;
    this.iconUrl = null;
  };
  DoodleShareButton.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  DoodleShareButton.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;




    // validate DoodleShareButton.backgroundColor
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, skcolor$.SkColor, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate DoodleShareButton.iconUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  DoodleShareButton.encodedSize = codec.kStructHeaderSize + 24;

  DoodleShareButton.decode = function(decoder) {
    var packed;
    var val = new DoodleShareButton();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.x =
        decoder.decodeStruct(codec.Int32);
    val.y =
        decoder.decodeStruct(codec.Int32);
    val.backgroundColor =
        decoder.decodeStructPointer(skcolor$.SkColor);
    val.iconUrl =
        decoder.decodeStructPointer(url$.Url);
    return val;
  };

  DoodleShareButton.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(DoodleShareButton.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.x);
    encoder.encodeStruct(codec.Int32, val.y);
    encoder.encodeStructPointer(skcolor$.SkColor, val.backgroundColor);
    encoder.encodeStructPointer(url$.Url, val.iconUrl);
  };
  function ImageDoodle(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  ImageDoodle.prototype.initDefaults_ = function() {
    this.imageUrl = null;
    this.animationUrl = null;
    this.width = 0;
    this.height = 0;
    this.backgroundColor = null;
    this.shareButton = null;
    this.imageImpressionLogUrl = null;
    this.animationImpressionLogUrl = null;
  };
  ImageDoodle.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  ImageDoodle.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 64}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate ImageDoodle.imageUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate ImageDoodle.animationUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, url$.Url, true);
    if (err !== validator.validationError.NONE)
        return err;




    // validate ImageDoodle.backgroundColor
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 24, skcolor$.SkColor, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate ImageDoodle.shareButton
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 32, DoodleShareButton, true);
    if (err !== validator.validationError.NONE)
        return err;


    // validate ImageDoodle.imageImpressionLogUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 40, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate ImageDoodle.animationImpressionLogUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 48, url$.Url, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  ImageDoodle.encodedSize = codec.kStructHeaderSize + 56;

  ImageDoodle.decode = function(decoder) {
    var packed;
    var val = new ImageDoodle();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.imageUrl =
        decoder.decodeStructPointer(url$.Url);
    val.animationUrl =
        decoder.decodeStructPointer(url$.Url);
    val.width =
        decoder.decodeStruct(codec.Uint32);
    val.height =
        decoder.decodeStruct(codec.Uint32);
    val.backgroundColor =
        decoder.decodeStructPointer(skcolor$.SkColor);
    val.shareButton =
        decoder.decodeStructPointer(DoodleShareButton);
    val.imageImpressionLogUrl =
        decoder.decodeStructPointer(url$.Url);
    val.animationImpressionLogUrl =
        decoder.decodeStructPointer(url$.Url);
    return val;
  };

  ImageDoodle.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(ImageDoodle.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(url$.Url, val.imageUrl);
    encoder.encodeStructPointer(url$.Url, val.animationUrl);
    encoder.encodeStruct(codec.Uint32, val.width);
    encoder.encodeStruct(codec.Uint32, val.height);
    encoder.encodeStructPointer(skcolor$.SkColor, val.backgroundColor);
    encoder.encodeStructPointer(DoodleShareButton, val.shareButton);
    encoder.encodeStructPointer(url$.Url, val.imageImpressionLogUrl);
    encoder.encodeStructPointer(url$.Url, val.animationImpressionLogUrl);
  };
  function AllModeImageDoodle(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  AllModeImageDoodle.prototype.initDefaults_ = function() {
    this.light = null;
    this.dark = null;
    this.onClickUrl = null;
    this.shareUrl = null;
  };
  AllModeImageDoodle.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  AllModeImageDoodle.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 40}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate AllModeImageDoodle.light
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, ImageDoodle, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate AllModeImageDoodle.dark
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, ImageDoodle, true);
    if (err !== validator.validationError.NONE)
        return err;


    // validate AllModeImageDoodle.onClickUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate AllModeImageDoodle.shareUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 24, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  AllModeImageDoodle.encodedSize = codec.kStructHeaderSize + 32;

  AllModeImageDoodle.decode = function(decoder) {
    var packed;
    var val = new AllModeImageDoodle();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.light =
        decoder.decodeStructPointer(ImageDoodle);
    val.dark =
        decoder.decodeStructPointer(ImageDoodle);
    val.onClickUrl =
        decoder.decodeStructPointer(url$.Url);
    val.shareUrl =
        decoder.decodeStructPointer(url$.Url);
    return val;
  };

  AllModeImageDoodle.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(AllModeImageDoodle.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(ImageDoodle, val.light);
    encoder.encodeStructPointer(ImageDoodle, val.dark);
    encoder.encodeStructPointer(url$.Url, val.onClickUrl);
    encoder.encodeStructPointer(url$.Url, val.shareUrl);
  };
  function InteractiveDoodle(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  InteractiveDoodle.prototype.initDefaults_ = function() {
    this.url = null;
    this.width = 0;
    this.height = 0;
  };
  InteractiveDoodle.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  InteractiveDoodle.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate InteractiveDoodle.url
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;



    return validator.validationError.NONE;
  };

  InteractiveDoodle.encodedSize = codec.kStructHeaderSize + 16;

  InteractiveDoodle.decode = function(decoder) {
    var packed;
    var val = new InteractiveDoodle();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.url =
        decoder.decodeStructPointer(url$.Url);
    val.width =
        decoder.decodeStruct(codec.Uint32);
    val.height =
        decoder.decodeStruct(codec.Uint32);
    return val;
  };

  InteractiveDoodle.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(InteractiveDoodle.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(url$.Url, val.url);
    encoder.encodeStruct(codec.Uint32, val.width);
    encoder.encodeStruct(codec.Uint32, val.height);
  };
  function Doodle(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  Doodle.prototype.initDefaults_ = function() {
    this.image = null;
    this.interactive = null;
    this.description = null;
  };
  Doodle.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  Doodle.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate Doodle.image
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, AllModeImageDoodle, true);
    if (err !== validator.validationError.NONE)
        return err;


    // validate Doodle.interactive
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, InteractiveDoodle, true);
    if (err !== validator.validationError.NONE)
        return err;


    // validate Doodle.description
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 16, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  Doodle.encodedSize = codec.kStructHeaderSize + 24;

  Doodle.decode = function(decoder) {
    var packed;
    var val = new Doodle();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.image =
        decoder.decodeStructPointer(AllModeImageDoodle);
    val.interactive =
        decoder.decodeStructPointer(InteractiveDoodle);
    val.description =
        decoder.decodeStruct(codec.String);
    return val;
  };

  Doodle.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(Doodle.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(AllModeImageDoodle, val.image);
    encoder.encodeStructPointer(InteractiveDoodle, val.interactive);
    encoder.encodeStruct(codec.String, val.description);
  };
  function PromoImagePart(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PromoImagePart.prototype.initDefaults_ = function() {
    this.imageUrl = null;
    this.target = null;
  };
  PromoImagePart.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PromoImagePart.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PromoImagePart.imageUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PromoImagePart.target
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PromoImagePart.encodedSize = codec.kStructHeaderSize + 16;

  PromoImagePart.decode = function(decoder) {
    var packed;
    var val = new PromoImagePart();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.imageUrl =
        decoder.decodeStructPointer(url$.Url);
    val.target =
        decoder.decodeStructPointer(url$.Url);
    return val;
  };

  PromoImagePart.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PromoImagePart.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(url$.Url, val.imageUrl);
    encoder.encodeStructPointer(url$.Url, val.target);
  };
  function PromoLinkPart(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PromoLinkPart.prototype.initDefaults_ = function() {
    this.color = null;
    this.text = null;
    this.url = null;
  };
  PromoLinkPart.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PromoLinkPart.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PromoLinkPart.color
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, true)
    if (err !== validator.validationError.NONE)
        return err;


    // validate PromoLinkPart.text
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 8, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate PromoLinkPart.url
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PromoLinkPart.encodedSize = codec.kStructHeaderSize + 24;

  PromoLinkPart.decode = function(decoder) {
    var packed;
    var val = new PromoLinkPart();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.color =
        decoder.decodeStruct(codec.NullableString);
    val.text =
        decoder.decodeStruct(codec.String);
    val.url =
        decoder.decodeStructPointer(url$.Url);
    return val;
  };

  PromoLinkPart.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PromoLinkPart.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.NullableString, val.color);
    encoder.encodeStruct(codec.String, val.text);
    encoder.encodeStructPointer(url$.Url, val.url);
  };
  function PromoTextPart(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PromoTextPart.prototype.initDefaults_ = function() {
    this.color = null;
    this.text = null;
  };
  PromoTextPart.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PromoTextPart.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PromoTextPart.color
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, true)
    if (err !== validator.validationError.NONE)
        return err;


    // validate PromoTextPart.text
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 8, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PromoTextPart.encodedSize = codec.kStructHeaderSize + 16;

  PromoTextPart.decode = function(decoder) {
    var packed;
    var val = new PromoTextPart();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.color =
        decoder.decodeStruct(codec.NullableString);
    val.text =
        decoder.decodeStruct(codec.String);
    return val;
  };

  PromoTextPart.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PromoTextPart.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.NullableString, val.color);
    encoder.encodeStruct(codec.String, val.text);
  };
  function Promo(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  Promo.prototype.initDefaults_ = function() {
    this.id = null;
    this.logUrl = null;
    this.middleSlotParts = null;
  };
  Promo.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  Promo.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate Promo.id
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, true)
    if (err !== validator.validationError.NONE)
        return err;


    // validate Promo.logUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, url$.Url, true);
    if (err !== validator.validationError.NONE)
        return err;


    // validate Promo.middleSlotParts
    err = messageValidator.validateArrayPointer(offset + codec.kStructHeaderSize + 16, 16, PromoPart, false, [0], 0);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  Promo.encodedSize = codec.kStructHeaderSize + 24;

  Promo.decode = function(decoder) {
    var packed;
    var val = new Promo();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.id =
        decoder.decodeStruct(codec.NullableString);
    val.logUrl =
        decoder.decodeStructPointer(url$.Url);
    val.middleSlotParts =
        decoder.decodeArrayPointer(PromoPart);
    return val;
  };

  Promo.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(Promo.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.NullableString, val.id);
    encoder.encodeStructPointer(url$.Url, val.logUrl);
    encoder.encodeArrayPointer(PromoPart, val.middleSlotParts);
  };
  function PageHandlerFactory_CreatePageHandler_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandlerFactory_CreatePageHandler_Params.prototype.initDefaults_ = function() {
    this.page = new PagePtr();
    this.handler = new bindings.InterfaceRequest();
  };
  PageHandlerFactory_CreatePageHandler_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandlerFactory_CreatePageHandler_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageHandlerFactory_CreatePageHandler_Params.page
    err = messageValidator.validateInterface(offset + codec.kStructHeaderSize + 0, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageHandlerFactory_CreatePageHandler_Params.handler
    err = messageValidator.validateInterfaceRequest(offset + codec.kStructHeaderSize + 8, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandlerFactory_CreatePageHandler_Params.encodedSize = codec.kStructHeaderSize + 16;

  PageHandlerFactory_CreatePageHandler_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandlerFactory_CreatePageHandler_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.page =
        decoder.decodeStruct(new codec.Interface(PagePtr));
    val.handler =
        decoder.decodeStruct(codec.InterfaceRequest);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  PageHandlerFactory_CreatePageHandler_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandlerFactory_CreatePageHandler_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(new codec.Interface(PagePtr), val.page);
    encoder.encodeStruct(codec.InterfaceRequest, val.handler);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function PageHandler_SetBackgroundImage_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_SetBackgroundImage_Params.prototype.initDefaults_ = function() {
    this.attribution1 = null;
    this.attribution2 = null;
    this.attributionUrl = null;
    this.imageUrl = null;
  };
  PageHandler_SetBackgroundImage_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_SetBackgroundImage_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 40}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageHandler_SetBackgroundImage_Params.attribution1
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageHandler_SetBackgroundImage_Params.attribution2
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 8, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageHandler_SetBackgroundImage_Params.attributionUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageHandler_SetBackgroundImage_Params.imageUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 24, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandler_SetBackgroundImage_Params.encodedSize = codec.kStructHeaderSize + 32;

  PageHandler_SetBackgroundImage_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_SetBackgroundImage_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.attribution1 =
        decoder.decodeStruct(codec.String);
    val.attribution2 =
        decoder.decodeStruct(codec.String);
    val.attributionUrl =
        decoder.decodeStructPointer(url$.Url);
    val.imageUrl =
        decoder.decodeStructPointer(url$.Url);
    return val;
  };

  PageHandler_SetBackgroundImage_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_SetBackgroundImage_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.attribution1);
    encoder.encodeStruct(codec.String, val.attribution2);
    encoder.encodeStructPointer(url$.Url, val.attributionUrl);
    encoder.encodeStructPointer(url$.Url, val.imageUrl);
  };
  function PageHandler_SetDailyRefreshCollectionId_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_SetDailyRefreshCollectionId_Params.prototype.initDefaults_ = function() {
    this.collectionId = null;
  };
  PageHandler_SetDailyRefreshCollectionId_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_SetDailyRefreshCollectionId_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageHandler_SetDailyRefreshCollectionId_Params.collectionId
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandler_SetDailyRefreshCollectionId_Params.encodedSize = codec.kStructHeaderSize + 8;

  PageHandler_SetDailyRefreshCollectionId_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_SetDailyRefreshCollectionId_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.collectionId =
        decoder.decodeStruct(codec.String);
    return val;
  };

  PageHandler_SetDailyRefreshCollectionId_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_SetDailyRefreshCollectionId_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.collectionId);
  };
  function PageHandler_SetNoBackgroundImage_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_SetNoBackgroundImage_Params.prototype.initDefaults_ = function() {
  };
  PageHandler_SetNoBackgroundImage_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_SetNoBackgroundImage_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandler_SetNoBackgroundImage_Params.encodedSize = codec.kStructHeaderSize + 0;

  PageHandler_SetNoBackgroundImage_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_SetNoBackgroundImage_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  PageHandler_SetNoBackgroundImage_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_SetNoBackgroundImage_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function PageHandler_SetMostVisitedSettings_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_SetMostVisitedSettings_Params.prototype.initDefaults_ = function() {
    this.customLinksEnabled = false;
    this.shortcutsVisible = false;
  };
  PageHandler_SetMostVisitedSettings_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_SetMostVisitedSettings_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    return validator.validationError.NONE;
  };

  PageHandler_SetMostVisitedSettings_Params.encodedSize = codec.kStructHeaderSize + 8;

  PageHandler_SetMostVisitedSettings_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_SetMostVisitedSettings_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.customLinksEnabled = (packed >> 0) & 1 ? true : false;
    val.shortcutsVisible = (packed >> 1) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  PageHandler_SetMostVisitedSettings_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_SetMostVisitedSettings_Params.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.customLinksEnabled & 1) << 0
    packed |= (val.shortcutsVisible & 1) << 1
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function PageHandler_GetMostVisitedSettings_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_GetMostVisitedSettings_Params.prototype.initDefaults_ = function() {
  };
  PageHandler_GetMostVisitedSettings_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_GetMostVisitedSettings_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandler_GetMostVisitedSettings_Params.encodedSize = codec.kStructHeaderSize + 0;

  PageHandler_GetMostVisitedSettings_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_GetMostVisitedSettings_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  PageHandler_GetMostVisitedSettings_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_GetMostVisitedSettings_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function PageHandler_GetMostVisitedSettings_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_GetMostVisitedSettings_ResponseParams.prototype.initDefaults_ = function() {
    this.customLinksEnabled = false;
    this.shortcutsVisible = false;
  };
  PageHandler_GetMostVisitedSettings_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_GetMostVisitedSettings_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    return validator.validationError.NONE;
  };

  PageHandler_GetMostVisitedSettings_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  PageHandler_GetMostVisitedSettings_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new PageHandler_GetMostVisitedSettings_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.customLinksEnabled = (packed >> 0) & 1 ? true : false;
    val.shortcutsVisible = (packed >> 1) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  PageHandler_GetMostVisitedSettings_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_GetMostVisitedSettings_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.customLinksEnabled & 1) << 0
    packed |= (val.shortcutsVisible & 1) << 1
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function PageHandler_GetBackgroundCollections_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_GetBackgroundCollections_Params.prototype.initDefaults_ = function() {
  };
  PageHandler_GetBackgroundCollections_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_GetBackgroundCollections_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandler_GetBackgroundCollections_Params.encodedSize = codec.kStructHeaderSize + 0;

  PageHandler_GetBackgroundCollections_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_GetBackgroundCollections_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  PageHandler_GetBackgroundCollections_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_GetBackgroundCollections_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function PageHandler_GetBackgroundCollections_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_GetBackgroundCollections_ResponseParams.prototype.initDefaults_ = function() {
    this.collections = null;
  };
  PageHandler_GetBackgroundCollections_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_GetBackgroundCollections_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageHandler_GetBackgroundCollections_ResponseParams.collections
    err = messageValidator.validateArrayPointer(offset + codec.kStructHeaderSize + 0, 8, new codec.PointerTo(BackgroundCollection), false, [0], 0);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandler_GetBackgroundCollections_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  PageHandler_GetBackgroundCollections_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new PageHandler_GetBackgroundCollections_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.collections =
        decoder.decodeArrayPointer(new codec.PointerTo(BackgroundCollection));
    return val;
  };

  PageHandler_GetBackgroundCollections_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_GetBackgroundCollections_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeArrayPointer(new codec.PointerTo(BackgroundCollection), val.collections);
  };
  function PageHandler_GetBackgroundImages_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_GetBackgroundImages_Params.prototype.initDefaults_ = function() {
    this.collectionId = null;
  };
  PageHandler_GetBackgroundImages_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_GetBackgroundImages_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageHandler_GetBackgroundImages_Params.collectionId
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandler_GetBackgroundImages_Params.encodedSize = codec.kStructHeaderSize + 8;

  PageHandler_GetBackgroundImages_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_GetBackgroundImages_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.collectionId =
        decoder.decodeStruct(codec.String);
    return val;
  };

  PageHandler_GetBackgroundImages_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_GetBackgroundImages_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.collectionId);
  };
  function PageHandler_GetBackgroundImages_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_GetBackgroundImages_ResponseParams.prototype.initDefaults_ = function() {
    this.images = null;
  };
  PageHandler_GetBackgroundImages_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_GetBackgroundImages_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageHandler_GetBackgroundImages_ResponseParams.images
    err = messageValidator.validateArrayPointer(offset + codec.kStructHeaderSize + 0, 8, new codec.PointerTo(CollectionImage), false, [0], 0);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandler_GetBackgroundImages_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  PageHandler_GetBackgroundImages_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new PageHandler_GetBackgroundImages_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.images =
        decoder.decodeArrayPointer(new codec.PointerTo(CollectionImage));
    return val;
  };

  PageHandler_GetBackgroundImages_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_GetBackgroundImages_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeArrayPointer(new codec.PointerTo(CollectionImage), val.images);
  };
  function PageHandler_GetDoodle_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_GetDoodle_Params.prototype.initDefaults_ = function() {
  };
  PageHandler_GetDoodle_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_GetDoodle_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandler_GetDoodle_Params.encodedSize = codec.kStructHeaderSize + 0;

  PageHandler_GetDoodle_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_GetDoodle_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  PageHandler_GetDoodle_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_GetDoodle_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function PageHandler_GetDoodle_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_GetDoodle_ResponseParams.prototype.initDefaults_ = function() {
    this.doodle = null;
  };
  PageHandler_GetDoodle_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_GetDoodle_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageHandler_GetDoodle_ResponseParams.doodle
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, Doodle, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandler_GetDoodle_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  PageHandler_GetDoodle_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new PageHandler_GetDoodle_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.doodle =
        decoder.decodeStructPointer(Doodle);
    return val;
  };

  PageHandler_GetDoodle_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_GetDoodle_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(Doodle, val.doodle);
  };
  function PageHandler_ChooseLocalCustomBackground_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_ChooseLocalCustomBackground_Params.prototype.initDefaults_ = function() {
  };
  PageHandler_ChooseLocalCustomBackground_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_ChooseLocalCustomBackground_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandler_ChooseLocalCustomBackground_Params.encodedSize = codec.kStructHeaderSize + 0;

  PageHandler_ChooseLocalCustomBackground_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_ChooseLocalCustomBackground_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  PageHandler_ChooseLocalCustomBackground_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_ChooseLocalCustomBackground_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function PageHandler_ChooseLocalCustomBackground_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_ChooseLocalCustomBackground_ResponseParams.prototype.initDefaults_ = function() {
    this.success = false;
  };
  PageHandler_ChooseLocalCustomBackground_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_ChooseLocalCustomBackground_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  PageHandler_ChooseLocalCustomBackground_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  PageHandler_ChooseLocalCustomBackground_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new PageHandler_ChooseLocalCustomBackground_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.success = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  PageHandler_ChooseLocalCustomBackground_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_ChooseLocalCustomBackground_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.success & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function PageHandler_GetPromo_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_GetPromo_Params.prototype.initDefaults_ = function() {
  };
  PageHandler_GetPromo_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_GetPromo_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandler_GetPromo_Params.encodedSize = codec.kStructHeaderSize + 0;

  PageHandler_GetPromo_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_GetPromo_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  PageHandler_GetPromo_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_GetPromo_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function PageHandler_GetPromo_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_GetPromo_ResponseParams.prototype.initDefaults_ = function() {
    this.promo = null;
  };
  PageHandler_GetPromo_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_GetPromo_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageHandler_GetPromo_ResponseParams.promo
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, Promo, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandler_GetPromo_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  PageHandler_GetPromo_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new PageHandler_GetPromo_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.promo =
        decoder.decodeStructPointer(Promo);
    return val;
  };

  PageHandler_GetPromo_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_GetPromo_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(Promo, val.promo);
  };
  function PageHandler_OnDismissModule_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_OnDismissModule_Params.prototype.initDefaults_ = function() {
    this.moduleId = null;
  };
  PageHandler_OnDismissModule_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_OnDismissModule_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageHandler_OnDismissModule_Params.moduleId
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandler_OnDismissModule_Params.encodedSize = codec.kStructHeaderSize + 8;

  PageHandler_OnDismissModule_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_OnDismissModule_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.moduleId =
        decoder.decodeStruct(codec.String);
    return val;
  };

  PageHandler_OnDismissModule_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_OnDismissModule_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.moduleId);
  };
  function PageHandler_OnRestoreModule_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_OnRestoreModule_Params.prototype.initDefaults_ = function() {
    this.moduleId = null;
  };
  PageHandler_OnRestoreModule_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_OnRestoreModule_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageHandler_OnRestoreModule_Params.moduleId
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandler_OnRestoreModule_Params.encodedSize = codec.kStructHeaderSize + 8;

  PageHandler_OnRestoreModule_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_OnRestoreModule_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.moduleId =
        decoder.decodeStruct(codec.String);
    return val;
  };

  PageHandler_OnRestoreModule_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_OnRestoreModule_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.moduleId);
  };
  function PageHandler_SetModulesVisible_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_SetModulesVisible_Params.prototype.initDefaults_ = function() {
    this.visible = false;
  };
  PageHandler_SetModulesVisible_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_SetModulesVisible_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  PageHandler_SetModulesVisible_Params.encodedSize = codec.kStructHeaderSize + 8;

  PageHandler_SetModulesVisible_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_SetModulesVisible_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.visible = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  PageHandler_SetModulesVisible_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_SetModulesVisible_Params.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.visible & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function PageHandler_SetModuleDisabled_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_SetModuleDisabled_Params.prototype.initDefaults_ = function() {
    this.moduleId = null;
    this.disabled = false;
  };
  PageHandler_SetModuleDisabled_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_SetModuleDisabled_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageHandler_SetModuleDisabled_Params.moduleId
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  PageHandler_SetModuleDisabled_Params.encodedSize = codec.kStructHeaderSize + 16;

  PageHandler_SetModuleDisabled_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_SetModuleDisabled_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.moduleId =
        decoder.decodeStruct(codec.String);
    packed = decoder.readUint8();
    val.disabled = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  PageHandler_SetModuleDisabled_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_SetModuleDisabled_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.moduleId);
    packed = 0;
    packed |= (val.disabled & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function PageHandler_UpdateDisabledModules_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_UpdateDisabledModules_Params.prototype.initDefaults_ = function() {
  };
  PageHandler_UpdateDisabledModules_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_UpdateDisabledModules_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandler_UpdateDisabledModules_Params.encodedSize = codec.kStructHeaderSize + 0;

  PageHandler_UpdateDisabledModules_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_UpdateDisabledModules_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  PageHandler_UpdateDisabledModules_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_UpdateDisabledModules_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function PageHandler_OnModulesLoadedWithData_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_OnModulesLoadedWithData_Params.prototype.initDefaults_ = function() {
  };
  PageHandler_OnModulesLoadedWithData_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_OnModulesLoadedWithData_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandler_OnModulesLoadedWithData_Params.encodedSize = codec.kStructHeaderSize + 0;

  PageHandler_OnModulesLoadedWithData_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_OnModulesLoadedWithData_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  PageHandler_OnModulesLoadedWithData_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_OnModulesLoadedWithData_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function PageHandler_SetModulesOrder_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_SetModulesOrder_Params.prototype.initDefaults_ = function() {
    this.moduleIds = null;
  };
  PageHandler_SetModulesOrder_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_SetModulesOrder_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageHandler_SetModulesOrder_Params.moduleIds
    err = messageValidator.validateArrayPointer(offset + codec.kStructHeaderSize + 0, 8, codec.String, false, [0, 0], 0);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandler_SetModulesOrder_Params.encodedSize = codec.kStructHeaderSize + 8;

  PageHandler_SetModulesOrder_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_SetModulesOrder_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.moduleIds =
        decoder.decodeArrayPointer(codec.String);
    return val;
  };

  PageHandler_SetModulesOrder_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_SetModulesOrder_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeArrayPointer(codec.String, val.moduleIds);
  };
  function PageHandler_GetModulesOrder_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_GetModulesOrder_Params.prototype.initDefaults_ = function() {
  };
  PageHandler_GetModulesOrder_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_GetModulesOrder_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandler_GetModulesOrder_Params.encodedSize = codec.kStructHeaderSize + 0;

  PageHandler_GetModulesOrder_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_GetModulesOrder_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  PageHandler_GetModulesOrder_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_GetModulesOrder_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function PageHandler_GetModulesOrder_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_GetModulesOrder_ResponseParams.prototype.initDefaults_ = function() {
    this.moduleIds = null;
  };
  PageHandler_GetModulesOrder_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_GetModulesOrder_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageHandler_GetModulesOrder_ResponseParams.moduleIds
    err = messageValidator.validateArrayPointer(offset + codec.kStructHeaderSize + 0, 8, codec.String, false, [0, 0], 0);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandler_GetModulesOrder_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  PageHandler_GetModulesOrder_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new PageHandler_GetModulesOrder_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.moduleIds =
        decoder.decodeArrayPointer(codec.String);
    return val;
  };

  PageHandler_GetModulesOrder_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_GetModulesOrder_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeArrayPointer(codec.String, val.moduleIds);
  };
  function PageHandler_OnOneGoogleBarRendered_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_OnOneGoogleBarRendered_Params.prototype.initDefaults_ = function() {
    this.time = 0;
  };
  PageHandler_OnOneGoogleBarRendered_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_OnOneGoogleBarRendered_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  PageHandler_OnOneGoogleBarRendered_Params.encodedSize = codec.kStructHeaderSize + 8;

  PageHandler_OnOneGoogleBarRendered_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_OnOneGoogleBarRendered_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.time =
        decoder.decodeStruct(codec.Double);
    return val;
  };

  PageHandler_OnOneGoogleBarRendered_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_OnOneGoogleBarRendered_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Double, val.time);
  };
  function PageHandler_OnPromoRendered_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_OnPromoRendered_Params.prototype.initDefaults_ = function() {
    this.time = 0;
    this.logUrl = null;
  };
  PageHandler_OnPromoRendered_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_OnPromoRendered_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    // validate PageHandler_OnPromoRendered_Params.logUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, url$.Url, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandler_OnPromoRendered_Params.encodedSize = codec.kStructHeaderSize + 16;

  PageHandler_OnPromoRendered_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_OnPromoRendered_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.time =
        decoder.decodeStruct(codec.Double);
    val.logUrl =
        decoder.decodeStructPointer(url$.Url);
    return val;
  };

  PageHandler_OnPromoRendered_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_OnPromoRendered_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Double, val.time);
    encoder.encodeStructPointer(url$.Url, val.logUrl);
  };
  function PageHandler_OnCustomizeDialogAction_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_OnCustomizeDialogAction_Params.prototype.initDefaults_ = function() {
    this.action = 0;
  };
  PageHandler_OnCustomizeDialogAction_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_OnCustomizeDialogAction_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageHandler_OnCustomizeDialogAction_Params.action
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 0, CustomizeDialogAction);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandler_OnCustomizeDialogAction_Params.encodedSize = codec.kStructHeaderSize + 8;

  PageHandler_OnCustomizeDialogAction_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_OnCustomizeDialogAction_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.action =
        decoder.decodeStruct(new codec.Enum(CustomizeDialogAction));
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  PageHandler_OnCustomizeDialogAction_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_OnCustomizeDialogAction_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.action);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function PageHandler_OnDoodleImageClicked_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_OnDoodleImageClicked_Params.prototype.initDefaults_ = function() {
    this.type = 0;
    this.logUrl = null;
  };
  PageHandler_OnDoodleImageClicked_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_OnDoodleImageClicked_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageHandler_OnDoodleImageClicked_Params.type
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 0, DoodleImageType);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageHandler_OnDoodleImageClicked_Params.logUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, url$.Url, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandler_OnDoodleImageClicked_Params.encodedSize = codec.kStructHeaderSize + 16;

  PageHandler_OnDoodleImageClicked_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_OnDoodleImageClicked_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.type =
        decoder.decodeStruct(new codec.Enum(DoodleImageType));
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.logUrl =
        decoder.decodeStructPointer(url$.Url);
    return val;
  };

  PageHandler_OnDoodleImageClicked_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_OnDoodleImageClicked_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.type);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStructPointer(url$.Url, val.logUrl);
  };
  function PageHandler_OnDoodleImageRendered_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_OnDoodleImageRendered_Params.prototype.initDefaults_ = function() {
    this.type = 0;
    this.time = 0;
    this.logUrl = null;
  };
  PageHandler_OnDoodleImageRendered_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_OnDoodleImageRendered_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageHandler_OnDoodleImageRendered_Params.type
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 0, DoodleImageType);
    if (err !== validator.validationError.NONE)
        return err;



    // validate PageHandler_OnDoodleImageRendered_Params.logUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandler_OnDoodleImageRendered_Params.encodedSize = codec.kStructHeaderSize + 24;

  PageHandler_OnDoodleImageRendered_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_OnDoodleImageRendered_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.type =
        decoder.decodeStruct(new codec.Enum(DoodleImageType));
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.time =
        decoder.decodeStruct(codec.Double);
    val.logUrl =
        decoder.decodeStructPointer(url$.Url);
    return val;
  };

  PageHandler_OnDoodleImageRendered_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_OnDoodleImageRendered_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.type);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStruct(codec.Double, val.time);
    encoder.encodeStructPointer(url$.Url, val.logUrl);
  };
  function PageHandler_OnDoodleImageRendered_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_OnDoodleImageRendered_ResponseParams.prototype.initDefaults_ = function() {
    this.imageClickParams = null;
    this.interactionLogUrl = null;
    this.shareId = null;
  };
  PageHandler_OnDoodleImageRendered_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_OnDoodleImageRendered_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageHandler_OnDoodleImageRendered_ResponseParams.imageClickParams
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, true)
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageHandler_OnDoodleImageRendered_ResponseParams.interactionLogUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, url$.Url, true);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageHandler_OnDoodleImageRendered_ResponseParams.shareId
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 16, true)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandler_OnDoodleImageRendered_ResponseParams.encodedSize = codec.kStructHeaderSize + 24;

  PageHandler_OnDoodleImageRendered_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new PageHandler_OnDoodleImageRendered_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.imageClickParams =
        decoder.decodeStruct(codec.NullableString);
    val.interactionLogUrl =
        decoder.decodeStructPointer(url$.Url);
    val.shareId =
        decoder.decodeStruct(codec.NullableString);
    return val;
  };

  PageHandler_OnDoodleImageRendered_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_OnDoodleImageRendered_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.NullableString, val.imageClickParams);
    encoder.encodeStructPointer(url$.Url, val.interactionLogUrl);
    encoder.encodeStruct(codec.NullableString, val.shareId);
  };
  function PageHandler_OnDoodleShared_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_OnDoodleShared_Params.prototype.initDefaults_ = function() {
    this.channel = 0;
    this.doodleId = null;
    this.shareId = null;
  };
  PageHandler_OnDoodleShared_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_OnDoodleShared_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageHandler_OnDoodleShared_Params.channel
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 0, DoodleShareChannel);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageHandler_OnDoodleShared_Params.doodleId
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 8, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageHandler_OnDoodleShared_Params.shareId
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 16, true)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandler_OnDoodleShared_Params.encodedSize = codec.kStructHeaderSize + 24;

  PageHandler_OnDoodleShared_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_OnDoodleShared_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.channel =
        decoder.decodeStruct(new codec.Enum(DoodleShareChannel));
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.doodleId =
        decoder.decodeStruct(codec.String);
    val.shareId =
        decoder.decodeStruct(codec.NullableString);
    return val;
  };

  PageHandler_OnDoodleShared_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_OnDoodleShared_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.channel);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStruct(codec.String, val.doodleId);
    encoder.encodeStruct(codec.NullableString, val.shareId);
  };
  function PageHandler_OnPromoLinkClicked_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_OnPromoLinkClicked_Params.prototype.initDefaults_ = function() {
  };
  PageHandler_OnPromoLinkClicked_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_OnPromoLinkClicked_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandler_OnPromoLinkClicked_Params.encodedSize = codec.kStructHeaderSize + 0;

  PageHandler_OnPromoLinkClicked_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_OnPromoLinkClicked_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  PageHandler_OnPromoLinkClicked_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_OnPromoLinkClicked_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function PageHandler_OnAppRendered_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_OnAppRendered_Params.prototype.initDefaults_ = function() {
    this.time = 0;
  };
  PageHandler_OnAppRendered_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_OnAppRendered_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  PageHandler_OnAppRendered_Params.encodedSize = codec.kStructHeaderSize + 8;

  PageHandler_OnAppRendered_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_OnAppRendered_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.time =
        decoder.decodeStruct(codec.Double);
    return val;
  };

  PageHandler_OnAppRendered_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_OnAppRendered_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Double, val.time);
  };
  function Page_SetTheme_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  Page_SetTheme_Params.prototype.initDefaults_ = function() {
    this.theme = null;
  };
  Page_SetTheme_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  Page_SetTheme_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate Page_SetTheme_Params.theme
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, Theme, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  Page_SetTheme_Params.encodedSize = codec.kStructHeaderSize + 8;

  Page_SetTheme_Params.decode = function(decoder) {
    var packed;
    var val = new Page_SetTheme_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.theme =
        decoder.decodeStructPointer(Theme);
    return val;
  };

  Page_SetTheme_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(Page_SetTheme_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(Theme, val.theme);
  };
  function Page_SetDisabledModules_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  Page_SetDisabledModules_Params.prototype.initDefaults_ = function() {
    this.all = false;
    this.ids = null;
  };
  Page_SetDisabledModules_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  Page_SetDisabledModules_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    // validate Page_SetDisabledModules_Params.ids
    err = messageValidator.validateArrayPointer(offset + codec.kStructHeaderSize + 8, 8, codec.String, false, [0, 0], 0);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  Page_SetDisabledModules_Params.encodedSize = codec.kStructHeaderSize + 16;

  Page_SetDisabledModules_Params.decode = function(decoder) {
    var packed;
    var val = new Page_SetDisabledModules_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.all = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.ids =
        decoder.decodeArrayPointer(codec.String);
    return val;
  };

  Page_SetDisabledModules_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(Page_SetDisabledModules_Params.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.all & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeArrayPointer(codec.String, val.ids);
  };

  function PromoPart(value) {
    this.initDefault_();
    this.initValue_(value);
  }


  PromoPart.Tags = {
    image: 0,
    link: 1,
    text: 2,
  };

  PromoPart.prototype.initDefault_ = function() {
    this.$data = null;
    this.$tag = undefined;
  }

  PromoPart.prototype.initValue_ = function(value) {
    if (value == undefined) {
      return;
    }

    var keys = Object.keys(value);
    if (keys.length == 0) {
      return;
    }

    if (keys.length > 1) {
      throw new TypeError("You may set only one member on a union.");
    }

    var fields = [
        "image",
        "link",
        "text",
    ];

    if (fields.indexOf(keys[0]) < 0) {
      throw new ReferenceError(keys[0] + " is not a PromoPart member.");

    }

    this[keys[0]] = value[keys[0]];
  }
  Object.defineProperty(PromoPart.prototype, "image", {
    get: function() {
      if (this.$tag != PromoPart.Tags.image) {
        throw new ReferenceError(
            "PromoPart.image is not currently set.");
      }
      return this.$data;
    },

    set: function(value) {
      this.$tag = PromoPart.Tags.image;
      this.$data = value;
    }
  });
  Object.defineProperty(PromoPart.prototype, "link", {
    get: function() {
      if (this.$tag != PromoPart.Tags.link) {
        throw new ReferenceError(
            "PromoPart.link is not currently set.");
      }
      return this.$data;
    },

    set: function(value) {
      this.$tag = PromoPart.Tags.link;
      this.$data = value;
    }
  });
  Object.defineProperty(PromoPart.prototype, "text", {
    get: function() {
      if (this.$tag != PromoPart.Tags.text) {
        throw new ReferenceError(
            "PromoPart.text is not currently set.");
      }
      return this.$data;
    },

    set: function(value) {
      this.$tag = PromoPart.Tags.text;
      this.$data = value;
    }
  });


    PromoPart.encode = function(encoder, val) {
      if (val == null) {
        encoder.writeUint64(0);
        encoder.writeUint64(0);
        return;
      }
      if (val.$tag == undefined) {
        throw new TypeError("Cannot encode unions with an unknown member set.");
      }

      encoder.writeUint32(16);
      encoder.writeUint32(val.$tag);
      switch (val.$tag) {
        case PromoPart.Tags.image:
          encoder.encodeStructPointer(PromoImagePart, val.image);
          break;
        case PromoPart.Tags.link:
          encoder.encodeStructPointer(PromoLinkPart, val.link);
          break;
        case PromoPart.Tags.text:
          encoder.encodeStructPointer(PromoTextPart, val.text);
          break;
      }
      encoder.align();
    };


    PromoPart.decode = function(decoder) {
      var size = decoder.readUint32();
      if (size == 0) {
        decoder.readUint32();
        decoder.readUint64();
        return null;
      }

      var result = new PromoPart();
      var tag = decoder.readUint32();
      switch (tag) {
        case PromoPart.Tags.image:
          result.image = decoder.decodeStructPointer(PromoImagePart);
          break;
        case PromoPart.Tags.link:
          result.link = decoder.decodeStructPointer(PromoLinkPart);
          break;
        case PromoPart.Tags.text:
          result.text = decoder.decodeStructPointer(PromoTextPart);
          break;
      }
      decoder.align();

      return result;
    };


    PromoPart.validate = function(messageValidator, offset) {
      var size = messageValidator.decodeUnionSize(offset);
      if (size != 16) {
        return validator.validationError.INVALID_UNION_SIZE;
      }

      var tag = messageValidator.decodeUnionTag(offset);
      var data_offset = offset + 8;
      var err;
      switch (tag) {
        case PromoPart.Tags.image:
          

    // validate PromoPart.image
    err = messageValidator.validateStructPointer(data_offset, PromoImagePart, false);
    if (err !== validator.validationError.NONE)
        return err;
          break;
        case PromoPart.Tags.link:
          

    // validate PromoPart.link
    err = messageValidator.validateStructPointer(data_offset, PromoLinkPart, false);
    if (err !== validator.validationError.NONE)
        return err;
          break;
        case PromoPart.Tags.text:
          

    // validate PromoPart.text
    err = messageValidator.validateStructPointer(data_offset, PromoTextPart, false);
    if (err !== validator.validationError.NONE)
        return err;
          break;
      }

      return validator.validationError.NONE;
    };

  PromoPart.encodedSize = 16;
  var kPageHandlerFactory_CreatePageHandler_Name = 445910499;

  function PageHandlerFactoryPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(PageHandlerFactory,
                                                   handleOrPtrInfo);
  }

  function PageHandlerFactoryAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        PageHandlerFactory, associatedInterfacePtrInfo);
  }

  PageHandlerFactoryAssociatedPtr.prototype =
      Object.create(PageHandlerFactoryPtr.prototype);
  PageHandlerFactoryAssociatedPtr.prototype.constructor =
      PageHandlerFactoryAssociatedPtr;

  function PageHandlerFactoryProxy(receiver) {
    this.receiver_ = receiver;
  }
  PageHandlerFactoryPtr.prototype.createPageHandler = function() {
    return PageHandlerFactoryProxy.prototype.createPageHandler
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerFactoryProxy.prototype.createPageHandler = function(page, handler) {
    var params_ = new PageHandlerFactory_CreatePageHandler_Params();
    params_.page = page;
    params_.handler = handler;
    var builder = new codec.MessageV0Builder(
        kPageHandlerFactory_CreatePageHandler_Name,
        codec.align(PageHandlerFactory_CreatePageHandler_Params.encodedSize));
    builder.encodeStruct(PageHandlerFactory_CreatePageHandler_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function PageHandlerFactoryStub(delegate) {
    this.delegate_ = delegate;
  }
  PageHandlerFactoryStub.prototype.createPageHandler = function(page, handler) {
    return this.delegate_ && this.delegate_.createPageHandler && this.delegate_.createPageHandler(page, handler);
  }

  PageHandlerFactoryStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kPageHandlerFactory_CreatePageHandler_Name:
      var params = reader.decodeStruct(PageHandlerFactory_CreatePageHandler_Params);
      this.createPageHandler(params.page, params.handler);
      return true;
    default:
      return false;
    }
  };

  PageHandlerFactoryStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validatePageHandlerFactoryRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kPageHandlerFactory_CreatePageHandler_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageHandlerFactory_CreatePageHandler_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validatePageHandlerFactoryResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var PageHandlerFactory = {
    name: 'new_tab_page.mojom.PageHandlerFactory',
    kVersion: 0,
    ptrClass: PageHandlerFactoryPtr,
    proxyClass: PageHandlerFactoryProxy,
    stubClass: PageHandlerFactoryStub,
    validateRequest: validatePageHandlerFactoryRequest,
    validateResponse: null,
  };
  PageHandlerFactoryStub.prototype.validator = validatePageHandlerFactoryRequest;
  PageHandlerFactoryProxy.prototype.validator = null;
  var kPageHandler_SetBackgroundImage_Name = 1298547416;
  var kPageHandler_SetDailyRefreshCollectionId_Name = 1962586384;
  var kPageHandler_SetNoBackgroundImage_Name = 1718134429;
  var kPageHandler_SetMostVisitedSettings_Name = 1770514989;
  var kPageHandler_GetMostVisitedSettings_Name = 1004344447;
  var kPageHandler_GetBackgroundCollections_Name = 1016706116;
  var kPageHandler_GetBackgroundImages_Name = 1532274342;
  var kPageHandler_GetDoodle_Name = 1863157924;
  var kPageHandler_ChooseLocalCustomBackground_Name = 1109409947;
  var kPageHandler_GetPromo_Name = 218421454;
  var kPageHandler_OnDismissModule_Name = 715592227;
  var kPageHandler_OnRestoreModule_Name = 1654545427;
  var kPageHandler_SetModulesVisible_Name = 85950616;
  var kPageHandler_SetModuleDisabled_Name = 1988749394;
  var kPageHandler_UpdateDisabledModules_Name = 2138288360;
  var kPageHandler_OnModulesLoadedWithData_Name = 1933834733;
  var kPageHandler_SetModulesOrder_Name = 411533922;
  var kPageHandler_GetModulesOrder_Name = 1537064469;
  var kPageHandler_OnOneGoogleBarRendered_Name = 1496237543;
  var kPageHandler_OnPromoRendered_Name = 285712552;
  var kPageHandler_OnCustomizeDialogAction_Name = 868182090;
  var kPageHandler_OnDoodleImageClicked_Name = 896935194;
  var kPageHandler_OnDoodleImageRendered_Name = 2126671132;
  var kPageHandler_OnDoodleShared_Name = 1662790854;
  var kPageHandler_OnPromoLinkClicked_Name = 1064735638;
  var kPageHandler_OnAppRendered_Name = 1625729334;

  function PageHandlerPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(PageHandler,
                                                   handleOrPtrInfo);
  }

  function PageHandlerAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        PageHandler, associatedInterfacePtrInfo);
  }

  PageHandlerAssociatedPtr.prototype =
      Object.create(PageHandlerPtr.prototype);
  PageHandlerAssociatedPtr.prototype.constructor =
      PageHandlerAssociatedPtr;

  function PageHandlerProxy(receiver) {
    this.receiver_ = receiver;
  }
  PageHandlerPtr.prototype.setBackgroundImage = function() {
    return PageHandlerProxy.prototype.setBackgroundImage
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.setBackgroundImage = function(attribution1, attribution2, attributionUrl, imageUrl) {
    var params_ = new PageHandler_SetBackgroundImage_Params();
    params_.attribution1 = attribution1;
    params_.attribution2 = attribution2;
    params_.attributionUrl = attributionUrl;
    params_.imageUrl = imageUrl;
    var builder = new codec.MessageV0Builder(
        kPageHandler_SetBackgroundImage_Name,
        codec.align(PageHandler_SetBackgroundImage_Params.encodedSize));
    builder.encodeStruct(PageHandler_SetBackgroundImage_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PageHandlerPtr.prototype.setDailyRefreshCollectionId = function() {
    return PageHandlerProxy.prototype.setDailyRefreshCollectionId
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.setDailyRefreshCollectionId = function(collectionId) {
    var params_ = new PageHandler_SetDailyRefreshCollectionId_Params();
    params_.collectionId = collectionId;
    var builder = new codec.MessageV0Builder(
        kPageHandler_SetDailyRefreshCollectionId_Name,
        codec.align(PageHandler_SetDailyRefreshCollectionId_Params.encodedSize));
    builder.encodeStruct(PageHandler_SetDailyRefreshCollectionId_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PageHandlerPtr.prototype.setNoBackgroundImage = function() {
    return PageHandlerProxy.prototype.setNoBackgroundImage
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.setNoBackgroundImage = function() {
    var params_ = new PageHandler_SetNoBackgroundImage_Params();
    var builder = new codec.MessageV0Builder(
        kPageHandler_SetNoBackgroundImage_Name,
        codec.align(PageHandler_SetNoBackgroundImage_Params.encodedSize));
    builder.encodeStruct(PageHandler_SetNoBackgroundImage_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PageHandlerPtr.prototype.setMostVisitedSettings = function() {
    return PageHandlerProxy.prototype.setMostVisitedSettings
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.setMostVisitedSettings = function(customLinksEnabled, shortcutsVisible) {
    var params_ = new PageHandler_SetMostVisitedSettings_Params();
    params_.customLinksEnabled = customLinksEnabled;
    params_.shortcutsVisible = shortcutsVisible;
    var builder = new codec.MessageV0Builder(
        kPageHandler_SetMostVisitedSettings_Name,
        codec.align(PageHandler_SetMostVisitedSettings_Params.encodedSize));
    builder.encodeStruct(PageHandler_SetMostVisitedSettings_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PageHandlerPtr.prototype.getMostVisitedSettings = function() {
    return PageHandlerProxy.prototype.getMostVisitedSettings
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.getMostVisitedSettings = function() {
    var params_ = new PageHandler_GetMostVisitedSettings_Params();
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kPageHandler_GetMostVisitedSettings_Name,
          codec.align(PageHandler_GetMostVisitedSettings_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(PageHandler_GetMostVisitedSettings_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(PageHandler_GetMostVisitedSettings_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  PageHandlerPtr.prototype.getBackgroundCollections = function() {
    return PageHandlerProxy.prototype.getBackgroundCollections
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.getBackgroundCollections = function() {
    var params_ = new PageHandler_GetBackgroundCollections_Params();
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kPageHandler_GetBackgroundCollections_Name,
          codec.align(PageHandler_GetBackgroundCollections_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(PageHandler_GetBackgroundCollections_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(PageHandler_GetBackgroundCollections_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  PageHandlerPtr.prototype.getBackgroundImages = function() {
    return PageHandlerProxy.prototype.getBackgroundImages
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.getBackgroundImages = function(collectionId) {
    var params_ = new PageHandler_GetBackgroundImages_Params();
    params_.collectionId = collectionId;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kPageHandler_GetBackgroundImages_Name,
          codec.align(PageHandler_GetBackgroundImages_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(PageHandler_GetBackgroundImages_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(PageHandler_GetBackgroundImages_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  PageHandlerPtr.prototype.getDoodle = function() {
    return PageHandlerProxy.prototype.getDoodle
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.getDoodle = function() {
    var params_ = new PageHandler_GetDoodle_Params();
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kPageHandler_GetDoodle_Name,
          codec.align(PageHandler_GetDoodle_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(PageHandler_GetDoodle_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(PageHandler_GetDoodle_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  PageHandlerPtr.prototype.chooseLocalCustomBackground = function() {
    return PageHandlerProxy.prototype.chooseLocalCustomBackground
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.chooseLocalCustomBackground = function() {
    var params_ = new PageHandler_ChooseLocalCustomBackground_Params();
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kPageHandler_ChooseLocalCustomBackground_Name,
          codec.align(PageHandler_ChooseLocalCustomBackground_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(PageHandler_ChooseLocalCustomBackground_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(PageHandler_ChooseLocalCustomBackground_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  PageHandlerPtr.prototype.getPromo = function() {
    return PageHandlerProxy.prototype.getPromo
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.getPromo = function() {
    var params_ = new PageHandler_GetPromo_Params();
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kPageHandler_GetPromo_Name,
          codec.align(PageHandler_GetPromo_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(PageHandler_GetPromo_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(PageHandler_GetPromo_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  PageHandlerPtr.prototype.onDismissModule = function() {
    return PageHandlerProxy.prototype.onDismissModule
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.onDismissModule = function(moduleId) {
    var params_ = new PageHandler_OnDismissModule_Params();
    params_.moduleId = moduleId;
    var builder = new codec.MessageV0Builder(
        kPageHandler_OnDismissModule_Name,
        codec.align(PageHandler_OnDismissModule_Params.encodedSize));
    builder.encodeStruct(PageHandler_OnDismissModule_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PageHandlerPtr.prototype.onRestoreModule = function() {
    return PageHandlerProxy.prototype.onRestoreModule
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.onRestoreModule = function(moduleId) {
    var params_ = new PageHandler_OnRestoreModule_Params();
    params_.moduleId = moduleId;
    var builder = new codec.MessageV0Builder(
        kPageHandler_OnRestoreModule_Name,
        codec.align(PageHandler_OnRestoreModule_Params.encodedSize));
    builder.encodeStruct(PageHandler_OnRestoreModule_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PageHandlerPtr.prototype.setModulesVisible = function() {
    return PageHandlerProxy.prototype.setModulesVisible
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.setModulesVisible = function(visible) {
    var params_ = new PageHandler_SetModulesVisible_Params();
    params_.visible = visible;
    var builder = new codec.MessageV0Builder(
        kPageHandler_SetModulesVisible_Name,
        codec.align(PageHandler_SetModulesVisible_Params.encodedSize));
    builder.encodeStruct(PageHandler_SetModulesVisible_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PageHandlerPtr.prototype.setModuleDisabled = function() {
    return PageHandlerProxy.prototype.setModuleDisabled
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.setModuleDisabled = function(moduleId, disabled) {
    var params_ = new PageHandler_SetModuleDisabled_Params();
    params_.moduleId = moduleId;
    params_.disabled = disabled;
    var builder = new codec.MessageV0Builder(
        kPageHandler_SetModuleDisabled_Name,
        codec.align(PageHandler_SetModuleDisabled_Params.encodedSize));
    builder.encodeStruct(PageHandler_SetModuleDisabled_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PageHandlerPtr.prototype.updateDisabledModules = function() {
    return PageHandlerProxy.prototype.updateDisabledModules
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.updateDisabledModules = function() {
    var params_ = new PageHandler_UpdateDisabledModules_Params();
    var builder = new codec.MessageV0Builder(
        kPageHandler_UpdateDisabledModules_Name,
        codec.align(PageHandler_UpdateDisabledModules_Params.encodedSize));
    builder.encodeStruct(PageHandler_UpdateDisabledModules_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PageHandlerPtr.prototype.onModulesLoadedWithData = function() {
    return PageHandlerProxy.prototype.onModulesLoadedWithData
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.onModulesLoadedWithData = function() {
    var params_ = new PageHandler_OnModulesLoadedWithData_Params();
    var builder = new codec.MessageV0Builder(
        kPageHandler_OnModulesLoadedWithData_Name,
        codec.align(PageHandler_OnModulesLoadedWithData_Params.encodedSize));
    builder.encodeStruct(PageHandler_OnModulesLoadedWithData_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PageHandlerPtr.prototype.setModulesOrder = function() {
    return PageHandlerProxy.prototype.setModulesOrder
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.setModulesOrder = function(moduleIds) {
    var params_ = new PageHandler_SetModulesOrder_Params();
    params_.moduleIds = moduleIds;
    var builder = new codec.MessageV0Builder(
        kPageHandler_SetModulesOrder_Name,
        codec.align(PageHandler_SetModulesOrder_Params.encodedSize));
    builder.encodeStruct(PageHandler_SetModulesOrder_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PageHandlerPtr.prototype.getModulesOrder = function() {
    return PageHandlerProxy.prototype.getModulesOrder
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.getModulesOrder = function() {
    var params_ = new PageHandler_GetModulesOrder_Params();
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kPageHandler_GetModulesOrder_Name,
          codec.align(PageHandler_GetModulesOrder_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(PageHandler_GetModulesOrder_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(PageHandler_GetModulesOrder_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  PageHandlerPtr.prototype.onOneGoogleBarRendered = function() {
    return PageHandlerProxy.prototype.onOneGoogleBarRendered
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.onOneGoogleBarRendered = function(time) {
    var params_ = new PageHandler_OnOneGoogleBarRendered_Params();
    params_.time = time;
    var builder = new codec.MessageV0Builder(
        kPageHandler_OnOneGoogleBarRendered_Name,
        codec.align(PageHandler_OnOneGoogleBarRendered_Params.encodedSize));
    builder.encodeStruct(PageHandler_OnOneGoogleBarRendered_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PageHandlerPtr.prototype.onPromoRendered = function() {
    return PageHandlerProxy.prototype.onPromoRendered
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.onPromoRendered = function(time, logUrl) {
    var params_ = new PageHandler_OnPromoRendered_Params();
    params_.time = time;
    params_.logUrl = logUrl;
    var builder = new codec.MessageV0Builder(
        kPageHandler_OnPromoRendered_Name,
        codec.align(PageHandler_OnPromoRendered_Params.encodedSize));
    builder.encodeStruct(PageHandler_OnPromoRendered_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PageHandlerPtr.prototype.onCustomizeDialogAction = function() {
    return PageHandlerProxy.prototype.onCustomizeDialogAction
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.onCustomizeDialogAction = function(action) {
    var params_ = new PageHandler_OnCustomizeDialogAction_Params();
    params_.action = action;
    var builder = new codec.MessageV0Builder(
        kPageHandler_OnCustomizeDialogAction_Name,
        codec.align(PageHandler_OnCustomizeDialogAction_Params.encodedSize));
    builder.encodeStruct(PageHandler_OnCustomizeDialogAction_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PageHandlerPtr.prototype.onDoodleImageClicked = function() {
    return PageHandlerProxy.prototype.onDoodleImageClicked
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.onDoodleImageClicked = function(type, logUrl) {
    var params_ = new PageHandler_OnDoodleImageClicked_Params();
    params_.type = type;
    params_.logUrl = logUrl;
    var builder = new codec.MessageV0Builder(
        kPageHandler_OnDoodleImageClicked_Name,
        codec.align(PageHandler_OnDoodleImageClicked_Params.encodedSize));
    builder.encodeStruct(PageHandler_OnDoodleImageClicked_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PageHandlerPtr.prototype.onDoodleImageRendered = function() {
    return PageHandlerProxy.prototype.onDoodleImageRendered
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.onDoodleImageRendered = function(type, time, logUrl) {
    var params_ = new PageHandler_OnDoodleImageRendered_Params();
    params_.type = type;
    params_.time = time;
    params_.logUrl = logUrl;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kPageHandler_OnDoodleImageRendered_Name,
          codec.align(PageHandler_OnDoodleImageRendered_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(PageHandler_OnDoodleImageRendered_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(PageHandler_OnDoodleImageRendered_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  PageHandlerPtr.prototype.onDoodleShared = function() {
    return PageHandlerProxy.prototype.onDoodleShared
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.onDoodleShared = function(channel, doodleId, shareId) {
    var params_ = new PageHandler_OnDoodleShared_Params();
    params_.channel = channel;
    params_.doodleId = doodleId;
    params_.shareId = shareId;
    var builder = new codec.MessageV0Builder(
        kPageHandler_OnDoodleShared_Name,
        codec.align(PageHandler_OnDoodleShared_Params.encodedSize));
    builder.encodeStruct(PageHandler_OnDoodleShared_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PageHandlerPtr.prototype.onPromoLinkClicked = function() {
    return PageHandlerProxy.prototype.onPromoLinkClicked
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.onPromoLinkClicked = function() {
    var params_ = new PageHandler_OnPromoLinkClicked_Params();
    var builder = new codec.MessageV0Builder(
        kPageHandler_OnPromoLinkClicked_Name,
        codec.align(PageHandler_OnPromoLinkClicked_Params.encodedSize));
    builder.encodeStruct(PageHandler_OnPromoLinkClicked_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PageHandlerPtr.prototype.onAppRendered = function() {
    return PageHandlerProxy.prototype.onAppRendered
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.onAppRendered = function(time) {
    var params_ = new PageHandler_OnAppRendered_Params();
    params_.time = time;
    var builder = new codec.MessageV0Builder(
        kPageHandler_OnAppRendered_Name,
        codec.align(PageHandler_OnAppRendered_Params.encodedSize));
    builder.encodeStruct(PageHandler_OnAppRendered_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function PageHandlerStub(delegate) {
    this.delegate_ = delegate;
  }
  PageHandlerStub.prototype.setBackgroundImage = function(attribution1, attribution2, attributionUrl, imageUrl) {
    return this.delegate_ && this.delegate_.setBackgroundImage && this.delegate_.setBackgroundImage(attribution1, attribution2, attributionUrl, imageUrl);
  }
  PageHandlerStub.prototype.setDailyRefreshCollectionId = function(collectionId) {
    return this.delegate_ && this.delegate_.setDailyRefreshCollectionId && this.delegate_.setDailyRefreshCollectionId(collectionId);
  }
  PageHandlerStub.prototype.setNoBackgroundImage = function() {
    return this.delegate_ && this.delegate_.setNoBackgroundImage && this.delegate_.setNoBackgroundImage();
  }
  PageHandlerStub.prototype.setMostVisitedSettings = function(customLinksEnabled, shortcutsVisible) {
    return this.delegate_ && this.delegate_.setMostVisitedSettings && this.delegate_.setMostVisitedSettings(customLinksEnabled, shortcutsVisible);
  }
  PageHandlerStub.prototype.getMostVisitedSettings = function() {
    return this.delegate_ && this.delegate_.getMostVisitedSettings && this.delegate_.getMostVisitedSettings();
  }
  PageHandlerStub.prototype.getBackgroundCollections = function() {
    return this.delegate_ && this.delegate_.getBackgroundCollections && this.delegate_.getBackgroundCollections();
  }
  PageHandlerStub.prototype.getBackgroundImages = function(collectionId) {
    return this.delegate_ && this.delegate_.getBackgroundImages && this.delegate_.getBackgroundImages(collectionId);
  }
  PageHandlerStub.prototype.getDoodle = function() {
    return this.delegate_ && this.delegate_.getDoodle && this.delegate_.getDoodle();
  }
  PageHandlerStub.prototype.chooseLocalCustomBackground = function() {
    return this.delegate_ && this.delegate_.chooseLocalCustomBackground && this.delegate_.chooseLocalCustomBackground();
  }
  PageHandlerStub.prototype.getPromo = function() {
    return this.delegate_ && this.delegate_.getPromo && this.delegate_.getPromo();
  }
  PageHandlerStub.prototype.onDismissModule = function(moduleId) {
    return this.delegate_ && this.delegate_.onDismissModule && this.delegate_.onDismissModule(moduleId);
  }
  PageHandlerStub.prototype.onRestoreModule = function(moduleId) {
    return this.delegate_ && this.delegate_.onRestoreModule && this.delegate_.onRestoreModule(moduleId);
  }
  PageHandlerStub.prototype.setModulesVisible = function(visible) {
    return this.delegate_ && this.delegate_.setModulesVisible && this.delegate_.setModulesVisible(visible);
  }
  PageHandlerStub.prototype.setModuleDisabled = function(moduleId, disabled) {
    return this.delegate_ && this.delegate_.setModuleDisabled && this.delegate_.setModuleDisabled(moduleId, disabled);
  }
  PageHandlerStub.prototype.updateDisabledModules = function() {
    return this.delegate_ && this.delegate_.updateDisabledModules && this.delegate_.updateDisabledModules();
  }
  PageHandlerStub.prototype.onModulesLoadedWithData = function() {
    return this.delegate_ && this.delegate_.onModulesLoadedWithData && this.delegate_.onModulesLoadedWithData();
  }
  PageHandlerStub.prototype.setModulesOrder = function(moduleIds) {
    return this.delegate_ && this.delegate_.setModulesOrder && this.delegate_.setModulesOrder(moduleIds);
  }
  PageHandlerStub.prototype.getModulesOrder = function() {
    return this.delegate_ && this.delegate_.getModulesOrder && this.delegate_.getModulesOrder();
  }
  PageHandlerStub.prototype.onOneGoogleBarRendered = function(time) {
    return this.delegate_ && this.delegate_.onOneGoogleBarRendered && this.delegate_.onOneGoogleBarRendered(time);
  }
  PageHandlerStub.prototype.onPromoRendered = function(time, logUrl) {
    return this.delegate_ && this.delegate_.onPromoRendered && this.delegate_.onPromoRendered(time, logUrl);
  }
  PageHandlerStub.prototype.onCustomizeDialogAction = function(action) {
    return this.delegate_ && this.delegate_.onCustomizeDialogAction && this.delegate_.onCustomizeDialogAction(action);
  }
  PageHandlerStub.prototype.onDoodleImageClicked = function(type, logUrl) {
    return this.delegate_ && this.delegate_.onDoodleImageClicked && this.delegate_.onDoodleImageClicked(type, logUrl);
  }
  PageHandlerStub.prototype.onDoodleImageRendered = function(type, time, logUrl) {
    return this.delegate_ && this.delegate_.onDoodleImageRendered && this.delegate_.onDoodleImageRendered(type, time, logUrl);
  }
  PageHandlerStub.prototype.onDoodleShared = function(channel, doodleId, shareId) {
    return this.delegate_ && this.delegate_.onDoodleShared && this.delegate_.onDoodleShared(channel, doodleId, shareId);
  }
  PageHandlerStub.prototype.onPromoLinkClicked = function() {
    return this.delegate_ && this.delegate_.onPromoLinkClicked && this.delegate_.onPromoLinkClicked();
  }
  PageHandlerStub.prototype.onAppRendered = function(time) {
    return this.delegate_ && this.delegate_.onAppRendered && this.delegate_.onAppRendered(time);
  }

  PageHandlerStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kPageHandler_SetBackgroundImage_Name:
      var params = reader.decodeStruct(PageHandler_SetBackgroundImage_Params);
      this.setBackgroundImage(params.attribution1, params.attribution2, params.attributionUrl, params.imageUrl);
      return true;
    case kPageHandler_SetDailyRefreshCollectionId_Name:
      var params = reader.decodeStruct(PageHandler_SetDailyRefreshCollectionId_Params);
      this.setDailyRefreshCollectionId(params.collectionId);
      return true;
    case kPageHandler_SetNoBackgroundImage_Name:
      var params = reader.decodeStruct(PageHandler_SetNoBackgroundImage_Params);
      this.setNoBackgroundImage();
      return true;
    case kPageHandler_SetMostVisitedSettings_Name:
      var params = reader.decodeStruct(PageHandler_SetMostVisitedSettings_Params);
      this.setMostVisitedSettings(params.customLinksEnabled, params.shortcutsVisible);
      return true;
    case kPageHandler_OnDismissModule_Name:
      var params = reader.decodeStruct(PageHandler_OnDismissModule_Params);
      this.onDismissModule(params.moduleId);
      return true;
    case kPageHandler_OnRestoreModule_Name:
      var params = reader.decodeStruct(PageHandler_OnRestoreModule_Params);
      this.onRestoreModule(params.moduleId);
      return true;
    case kPageHandler_SetModulesVisible_Name:
      var params = reader.decodeStruct(PageHandler_SetModulesVisible_Params);
      this.setModulesVisible(params.visible);
      return true;
    case kPageHandler_SetModuleDisabled_Name:
      var params = reader.decodeStruct(PageHandler_SetModuleDisabled_Params);
      this.setModuleDisabled(params.moduleId, params.disabled);
      return true;
    case kPageHandler_UpdateDisabledModules_Name:
      var params = reader.decodeStruct(PageHandler_UpdateDisabledModules_Params);
      this.updateDisabledModules();
      return true;
    case kPageHandler_OnModulesLoadedWithData_Name:
      var params = reader.decodeStruct(PageHandler_OnModulesLoadedWithData_Params);
      this.onModulesLoadedWithData();
      return true;
    case kPageHandler_SetModulesOrder_Name:
      var params = reader.decodeStruct(PageHandler_SetModulesOrder_Params);
      this.setModulesOrder(params.moduleIds);
      return true;
    case kPageHandler_OnOneGoogleBarRendered_Name:
      var params = reader.decodeStruct(PageHandler_OnOneGoogleBarRendered_Params);
      this.onOneGoogleBarRendered(params.time);
      return true;
    case kPageHandler_OnPromoRendered_Name:
      var params = reader.decodeStruct(PageHandler_OnPromoRendered_Params);
      this.onPromoRendered(params.time, params.logUrl);
      return true;
    case kPageHandler_OnCustomizeDialogAction_Name:
      var params = reader.decodeStruct(PageHandler_OnCustomizeDialogAction_Params);
      this.onCustomizeDialogAction(params.action);
      return true;
    case kPageHandler_OnDoodleImageClicked_Name:
      var params = reader.decodeStruct(PageHandler_OnDoodleImageClicked_Params);
      this.onDoodleImageClicked(params.type, params.logUrl);
      return true;
    case kPageHandler_OnDoodleShared_Name:
      var params = reader.decodeStruct(PageHandler_OnDoodleShared_Params);
      this.onDoodleShared(params.channel, params.doodleId, params.shareId);
      return true;
    case kPageHandler_OnPromoLinkClicked_Name:
      var params = reader.decodeStruct(PageHandler_OnPromoLinkClicked_Params);
      this.onPromoLinkClicked();
      return true;
    case kPageHandler_OnAppRendered_Name:
      var params = reader.decodeStruct(PageHandler_OnAppRendered_Params);
      this.onAppRendered(params.time);
      return true;
    default:
      return false;
    }
  };

  PageHandlerStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kPageHandler_GetMostVisitedSettings_Name:
      var params = reader.decodeStruct(PageHandler_GetMostVisitedSettings_Params);
      this.getMostVisitedSettings().then(function(response) {
        var responseParams =
            new PageHandler_GetMostVisitedSettings_ResponseParams();
        responseParams.customLinksEnabled = response.customLinksEnabled;
        responseParams.shortcutsVisible = response.shortcutsVisible;
        var builder = new codec.MessageV1Builder(
            kPageHandler_GetMostVisitedSettings_Name,
            codec.align(PageHandler_GetMostVisitedSettings_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(PageHandler_GetMostVisitedSettings_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kPageHandler_GetBackgroundCollections_Name:
      var params = reader.decodeStruct(PageHandler_GetBackgroundCollections_Params);
      this.getBackgroundCollections().then(function(response) {
        var responseParams =
            new PageHandler_GetBackgroundCollections_ResponseParams();
        responseParams.collections = response.collections;
        var builder = new codec.MessageV1Builder(
            kPageHandler_GetBackgroundCollections_Name,
            codec.align(PageHandler_GetBackgroundCollections_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(PageHandler_GetBackgroundCollections_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kPageHandler_GetBackgroundImages_Name:
      var params = reader.decodeStruct(PageHandler_GetBackgroundImages_Params);
      this.getBackgroundImages(params.collectionId).then(function(response) {
        var responseParams =
            new PageHandler_GetBackgroundImages_ResponseParams();
        responseParams.images = response.images;
        var builder = new codec.MessageV1Builder(
            kPageHandler_GetBackgroundImages_Name,
            codec.align(PageHandler_GetBackgroundImages_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(PageHandler_GetBackgroundImages_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kPageHandler_GetDoodle_Name:
      var params = reader.decodeStruct(PageHandler_GetDoodle_Params);
      this.getDoodle().then(function(response) {
        var responseParams =
            new PageHandler_GetDoodle_ResponseParams();
        responseParams.doodle = response.doodle;
        var builder = new codec.MessageV1Builder(
            kPageHandler_GetDoodle_Name,
            codec.align(PageHandler_GetDoodle_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(PageHandler_GetDoodle_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kPageHandler_ChooseLocalCustomBackground_Name:
      var params = reader.decodeStruct(PageHandler_ChooseLocalCustomBackground_Params);
      this.chooseLocalCustomBackground().then(function(response) {
        var responseParams =
            new PageHandler_ChooseLocalCustomBackground_ResponseParams();
        responseParams.success = response.success;
        var builder = new codec.MessageV1Builder(
            kPageHandler_ChooseLocalCustomBackground_Name,
            codec.align(PageHandler_ChooseLocalCustomBackground_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(PageHandler_ChooseLocalCustomBackground_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kPageHandler_GetPromo_Name:
      var params = reader.decodeStruct(PageHandler_GetPromo_Params);
      this.getPromo().then(function(response) {
        var responseParams =
            new PageHandler_GetPromo_ResponseParams();
        responseParams.promo = response.promo;
        var builder = new codec.MessageV1Builder(
            kPageHandler_GetPromo_Name,
            codec.align(PageHandler_GetPromo_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(PageHandler_GetPromo_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kPageHandler_GetModulesOrder_Name:
      var params = reader.decodeStruct(PageHandler_GetModulesOrder_Params);
      this.getModulesOrder().then(function(response) {
        var responseParams =
            new PageHandler_GetModulesOrder_ResponseParams();
        responseParams.moduleIds = response.moduleIds;
        var builder = new codec.MessageV1Builder(
            kPageHandler_GetModulesOrder_Name,
            codec.align(PageHandler_GetModulesOrder_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(PageHandler_GetModulesOrder_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kPageHandler_OnDoodleImageRendered_Name:
      var params = reader.decodeStruct(PageHandler_OnDoodleImageRendered_Params);
      this.onDoodleImageRendered(params.type, params.time, params.logUrl).then(function(response) {
        var responseParams =
            new PageHandler_OnDoodleImageRendered_ResponseParams();
        responseParams.imageClickParams = response.imageClickParams;
        responseParams.interactionLogUrl = response.interactionLogUrl;
        responseParams.shareId = response.shareId;
        var builder = new codec.MessageV1Builder(
            kPageHandler_OnDoodleImageRendered_Name,
            codec.align(PageHandler_OnDoodleImageRendered_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(PageHandler_OnDoodleImageRendered_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    default:
      return false;
    }
  };

  function validatePageHandlerRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kPageHandler_SetBackgroundImage_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageHandler_SetBackgroundImage_Params;
      break;
      case kPageHandler_SetDailyRefreshCollectionId_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageHandler_SetDailyRefreshCollectionId_Params;
      break;
      case kPageHandler_SetNoBackgroundImage_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageHandler_SetNoBackgroundImage_Params;
      break;
      case kPageHandler_SetMostVisitedSettings_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageHandler_SetMostVisitedSettings_Params;
      break;
      case kPageHandler_GetMostVisitedSettings_Name:
        if (message.expectsResponse())
          paramsClass = PageHandler_GetMostVisitedSettings_Params;
      break;
      case kPageHandler_GetBackgroundCollections_Name:
        if (message.expectsResponse())
          paramsClass = PageHandler_GetBackgroundCollections_Params;
      break;
      case kPageHandler_GetBackgroundImages_Name:
        if (message.expectsResponse())
          paramsClass = PageHandler_GetBackgroundImages_Params;
      break;
      case kPageHandler_GetDoodle_Name:
        if (message.expectsResponse())
          paramsClass = PageHandler_GetDoodle_Params;
      break;
      case kPageHandler_ChooseLocalCustomBackground_Name:
        if (message.expectsResponse())
          paramsClass = PageHandler_ChooseLocalCustomBackground_Params;
      break;
      case kPageHandler_GetPromo_Name:
        if (message.expectsResponse())
          paramsClass = PageHandler_GetPromo_Params;
      break;
      case kPageHandler_OnDismissModule_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageHandler_OnDismissModule_Params;
      break;
      case kPageHandler_OnRestoreModule_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageHandler_OnRestoreModule_Params;
      break;
      case kPageHandler_SetModulesVisible_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageHandler_SetModulesVisible_Params;
      break;
      case kPageHandler_SetModuleDisabled_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageHandler_SetModuleDisabled_Params;
      break;
      case kPageHandler_UpdateDisabledModules_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageHandler_UpdateDisabledModules_Params;
      break;
      case kPageHandler_OnModulesLoadedWithData_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageHandler_OnModulesLoadedWithData_Params;
      break;
      case kPageHandler_SetModulesOrder_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageHandler_SetModulesOrder_Params;
      break;
      case kPageHandler_GetModulesOrder_Name:
        if (message.expectsResponse())
          paramsClass = PageHandler_GetModulesOrder_Params;
      break;
      case kPageHandler_OnOneGoogleBarRendered_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageHandler_OnOneGoogleBarRendered_Params;
      break;
      case kPageHandler_OnPromoRendered_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageHandler_OnPromoRendered_Params;
      break;
      case kPageHandler_OnCustomizeDialogAction_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageHandler_OnCustomizeDialogAction_Params;
      break;
      case kPageHandler_OnDoodleImageClicked_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageHandler_OnDoodleImageClicked_Params;
      break;
      case kPageHandler_OnDoodleImageRendered_Name:
        if (message.expectsResponse())
          paramsClass = PageHandler_OnDoodleImageRendered_Params;
      break;
      case kPageHandler_OnDoodleShared_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageHandler_OnDoodleShared_Params;
      break;
      case kPageHandler_OnPromoLinkClicked_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageHandler_OnPromoLinkClicked_Params;
      break;
      case kPageHandler_OnAppRendered_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageHandler_OnAppRendered_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validatePageHandlerResponse(messageValidator) {
   var message = messageValidator.message;
   var paramsClass = null;
   switch (message.getName()) {
      case kPageHandler_GetMostVisitedSettings_Name:
        if (message.isResponse())
          paramsClass = PageHandler_GetMostVisitedSettings_ResponseParams;
        break;
      case kPageHandler_GetBackgroundCollections_Name:
        if (message.isResponse())
          paramsClass = PageHandler_GetBackgroundCollections_ResponseParams;
        break;
      case kPageHandler_GetBackgroundImages_Name:
        if (message.isResponse())
          paramsClass = PageHandler_GetBackgroundImages_ResponseParams;
        break;
      case kPageHandler_GetDoodle_Name:
        if (message.isResponse())
          paramsClass = PageHandler_GetDoodle_ResponseParams;
        break;
      case kPageHandler_ChooseLocalCustomBackground_Name:
        if (message.isResponse())
          paramsClass = PageHandler_ChooseLocalCustomBackground_ResponseParams;
        break;
      case kPageHandler_GetPromo_Name:
        if (message.isResponse())
          paramsClass = PageHandler_GetPromo_ResponseParams;
        break;
      case kPageHandler_GetModulesOrder_Name:
        if (message.isResponse())
          paramsClass = PageHandler_GetModulesOrder_ResponseParams;
        break;
      case kPageHandler_OnDoodleImageRendered_Name:
        if (message.isResponse())
          paramsClass = PageHandler_OnDoodleImageRendered_ResponseParams;
        break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  var PageHandler = {
    name: 'new_tab_page.mojom.PageHandler',
    kVersion: 0,
    ptrClass: PageHandlerPtr,
    proxyClass: PageHandlerProxy,
    stubClass: PageHandlerStub,
    validateRequest: validatePageHandlerRequest,
    validateResponse: validatePageHandlerResponse,
  };
  PageHandlerStub.prototype.validator = validatePageHandlerRequest;
  PageHandlerProxy.prototype.validator = validatePageHandlerResponse;
  var kPage_SetTheme_Name = 1002832096;
  var kPage_SetDisabledModules_Name = 2119873422;

  function PagePtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(Page,
                                                   handleOrPtrInfo);
  }

  function PageAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        Page, associatedInterfacePtrInfo);
  }

  PageAssociatedPtr.prototype =
      Object.create(PagePtr.prototype);
  PageAssociatedPtr.prototype.constructor =
      PageAssociatedPtr;

  function PageProxy(receiver) {
    this.receiver_ = receiver;
  }
  PagePtr.prototype.setTheme = function() {
    return PageProxy.prototype.setTheme
        .apply(this.ptr.getProxy(), arguments);
  };

  PageProxy.prototype.setTheme = function(theme) {
    var params_ = new Page_SetTheme_Params();
    params_.theme = theme;
    var builder = new codec.MessageV0Builder(
        kPage_SetTheme_Name,
        codec.align(Page_SetTheme_Params.encodedSize));
    builder.encodeStruct(Page_SetTheme_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PagePtr.prototype.setDisabledModules = function() {
    return PageProxy.prototype.setDisabledModules
        .apply(this.ptr.getProxy(), arguments);
  };

  PageProxy.prototype.setDisabledModules = function(all, ids) {
    var params_ = new Page_SetDisabledModules_Params();
    params_.all = all;
    params_.ids = ids;
    var builder = new codec.MessageV0Builder(
        kPage_SetDisabledModules_Name,
        codec.align(Page_SetDisabledModules_Params.encodedSize));
    builder.encodeStruct(Page_SetDisabledModules_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function PageStub(delegate) {
    this.delegate_ = delegate;
  }
  PageStub.prototype.setTheme = function(theme) {
    return this.delegate_ && this.delegate_.setTheme && this.delegate_.setTheme(theme);
  }
  PageStub.prototype.setDisabledModules = function(all, ids) {
    return this.delegate_ && this.delegate_.setDisabledModules && this.delegate_.setDisabledModules(all, ids);
  }

  PageStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kPage_SetTheme_Name:
      var params = reader.decodeStruct(Page_SetTheme_Params);
      this.setTheme(params.theme);
      return true;
    case kPage_SetDisabledModules_Name:
      var params = reader.decodeStruct(Page_SetDisabledModules_Params);
      this.setDisabledModules(params.all, params.ids);
      return true;
    default:
      return false;
    }
  };

  PageStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validatePageRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kPage_SetTheme_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = Page_SetTheme_Params;
      break;
      case kPage_SetDisabledModules_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = Page_SetDisabledModules_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validatePageResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var Page = {
    name: 'new_tab_page.mojom.Page',
    kVersion: 0,
    ptrClass: PagePtr,
    proxyClass: PageProxy,
    stubClass: PageStub,
    validateRequest: validatePageRequest,
    validateResponse: null,
  };
  PageStub.prototype.validator = validatePageRequest;
  PageProxy.prototype.validator = null;
  exports.DoodleImageType = DoodleImageType;
  exports.DoodleShareChannel = DoodleShareChannel;
  exports.CustomizeDialogAction = CustomizeDialogAction;
  exports.BackgroundCollection = BackgroundCollection;
  exports.CollectionImage = CollectionImage;
  exports.BackgroundImage = BackgroundImage;
  exports.Theme = Theme;
  exports.DoodleShareButton = DoodleShareButton;
  exports.ImageDoodle = ImageDoodle;
  exports.AllModeImageDoodle = AllModeImageDoodle;
  exports.InteractiveDoodle = InteractiveDoodle;
  exports.Doodle = Doodle;
  exports.PromoImagePart = PromoImagePart;
  exports.PromoLinkPart = PromoLinkPart;
  exports.PromoTextPart = PromoTextPart;
  exports.Promo = Promo;
  exports.PromoPart = PromoPart;
  exports.PageHandlerFactory = PageHandlerFactory;
  exports.PageHandlerFactoryPtr = PageHandlerFactoryPtr;
  exports.PageHandlerFactoryAssociatedPtr = PageHandlerFactoryAssociatedPtr;
  exports.PageHandler = PageHandler;
  exports.PageHandlerPtr = PageHandlerPtr;
  exports.PageHandlerAssociatedPtr = PageHandlerAssociatedPtr;
  exports.Page = Page;
  exports.PagePtr = PagePtr;
  exports.PageAssociatedPtr = PageAssociatedPtr;
})();