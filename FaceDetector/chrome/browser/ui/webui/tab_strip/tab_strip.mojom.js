// chrome/browser/ui/webui/tab_strip/tab_strip.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'chrome/browser/ui/webui/tab_strip/tab_strip.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('tabStrip.mojom');
  var url$ =
      mojo.internal.exposeNamespace('url.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'url/mojom/url.mojom', '../../../../../url/mojom/url.mojom.js');
  }


  var TabNetworkState = {};
  TabNetworkState.kNone = 0;
  TabNetworkState.kWaiting = 1;
  TabNetworkState.kLoading = 2;
  TabNetworkState.kError = 3;
  TabNetworkState.MIN_VALUE = 0;
  TabNetworkState.MAX_VALUE = 3;

  TabNetworkState.isKnownEnumValue = function(value) {
    switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    }
    return false;
  };

  TabNetworkState.toKnownEnumValue = function(value) {
    return value;
  };

  TabNetworkState.validate = function(enumValue) {
    const isExtensible = false;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };
  var TabAlertState = {};
  TabAlertState.kAudioMuting = 0;
  TabAlertState.kAudioPlaying = 1;
  TabAlertState.kBluetoothConnected = 2;
  TabAlertState.kDesktopCapturing = 3;
  TabAlertState.kHidConnected = 4;
  TabAlertState.kMediaRecording = 5;
  TabAlertState.kPipPlaying = 6;
  TabAlertState.kSerialConnected = 7;
  TabAlertState.kTabCapturing = 8;
  TabAlertState.kUsbConnected = 9;
  TabAlertState.kVrPresentingInHeadset = 10;
  TabAlertState.MIN_VALUE = 0;
  TabAlertState.MAX_VALUE = 10;

  TabAlertState.isKnownEnumValue = function(value) {
    switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    }
    return false;
  };

  TabAlertState.toKnownEnumValue = function(value) {
    return value;
  };

  TabAlertState.validate = function(enumValue) {
    const isExtensible = false;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };

  function Tab(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  Tab.prototype.initDefaults_ = function() {
    this.active = false;
    this.blocked = false;
    this.crashed = false;
    this.isDefaultFavicon = false;
    this.pinned = false;
    this.shouldHideThrobber = false;
    this.showIcon = false;
    this.id = 0;
    this.alertStates = null;
    this.faviconUrl = null;
    this.groupId = null;
    this.index = 0;
    this.networkState = 0;
    this.title = null;
    this.url = null;
  };
  Tab.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  Tab.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 64}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    // validate Tab.alertStates
    err = messageValidator.validateArrayPointer(offset + codec.kStructHeaderSize + 8, 4, new codec.Enum(TabAlertState), false, [0], 0);
    if (err !== validator.validationError.NONE)
        return err;




    // validate Tab.faviconUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, url$.Url, true);
    if (err !== validator.validationError.NONE)
        return err;


    // validate Tab.groupId
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 24, true)
    if (err !== validator.validationError.NONE)
        return err;





    // validate Tab.networkState
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 36, TabNetworkState);
    if (err !== validator.validationError.NONE)
        return err;





    // validate Tab.title
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 40, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate Tab.url
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 48, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  Tab.encodedSize = codec.kStructHeaderSize + 56;

  Tab.decode = function(decoder) {
    var packed;
    var val = new Tab();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.active = (packed >> 0) & 1 ? true : false;
    val.blocked = (packed >> 1) & 1 ? true : false;
    val.crashed = (packed >> 2) & 1 ? true : false;
    val.isDefaultFavicon = (packed >> 3) & 1 ? true : false;
    val.pinned = (packed >> 4) & 1 ? true : false;
    val.shouldHideThrobber = (packed >> 5) & 1 ? true : false;
    val.showIcon = (packed >> 6) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.id =
        decoder.decodeStruct(codec.Int32);
    val.alertStates =
        decoder.decodeArrayPointer(new codec.Enum(TabAlertState));
    val.faviconUrl =
        decoder.decodeStructPointer(url$.Url);
    val.groupId =
        decoder.decodeStruct(codec.NullableString);
    val.index =
        decoder.decodeStruct(codec.Int32);
    val.networkState =
        decoder.decodeStruct(new codec.Enum(TabNetworkState));
    val.title =
        decoder.decodeStruct(codec.String);
    val.url =
        decoder.decodeStructPointer(url$.Url);
    return val;
  };

  Tab.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(Tab.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.active & 1) << 0
    packed |= (val.blocked & 1) << 1
    packed |= (val.crashed & 1) << 2
    packed |= (val.isDefaultFavicon & 1) << 3
    packed |= (val.pinned & 1) << 4
    packed |= (val.shouldHideThrobber & 1) << 5
    packed |= (val.showIcon & 1) << 6
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStruct(codec.Int32, val.id);
    encoder.encodeArrayPointer(new codec.Enum(TabAlertState), val.alertStates);
    encoder.encodeStructPointer(url$.Url, val.faviconUrl);
    encoder.encodeStruct(codec.NullableString, val.groupId);
    encoder.encodeStruct(codec.Int32, val.index);
    encoder.encodeStruct(codec.Int32, val.networkState);
    encoder.encodeStruct(codec.String, val.title);
    encoder.encodeStructPointer(url$.Url, val.url);
  };
  function TabGroupVisualData(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  TabGroupVisualData.prototype.initDefaults_ = function() {
    this.color = null;
    this.textColor = null;
    this.title = null;
  };
  TabGroupVisualData.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  TabGroupVisualData.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate TabGroupVisualData.color
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate TabGroupVisualData.textColor
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 8, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate TabGroupVisualData.title
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 16, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  TabGroupVisualData.encodedSize = codec.kStructHeaderSize + 24;

  TabGroupVisualData.decode = function(decoder) {
    var packed;
    var val = new TabGroupVisualData();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.color =
        decoder.decodeStruct(codec.String);
    val.textColor =
        decoder.decodeStruct(codec.String);
    val.title =
        decoder.decodeStruct(codec.String);
    return val;
  };

  TabGroupVisualData.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(TabGroupVisualData.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.color);
    encoder.encodeStruct(codec.String, val.textColor);
    encoder.encodeStruct(codec.String, val.title);
  };
  function PageHandlerFactory_CreatePageHandler_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandlerFactory_CreatePageHandler_Params.prototype.initDefaults_ = function() {
    this.page = new PagePtr();
    this.handler = new bindings.InterfaceRequest();
  };
  PageHandlerFactory_CreatePageHandler_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandlerFactory_CreatePageHandler_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageHandlerFactory_CreatePageHandler_Params.page
    err = messageValidator.validateInterface(offset + codec.kStructHeaderSize + 0, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageHandlerFactory_CreatePageHandler_Params.handler
    err = messageValidator.validateInterfaceRequest(offset + codec.kStructHeaderSize + 8, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandlerFactory_CreatePageHandler_Params.encodedSize = codec.kStructHeaderSize + 16;

  PageHandlerFactory_CreatePageHandler_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandlerFactory_CreatePageHandler_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.page =
        decoder.decodeStruct(new codec.Interface(PagePtr));
    val.handler =
        decoder.decodeStruct(codec.InterfaceRequest);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  PageHandlerFactory_CreatePageHandler_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandlerFactory_CreatePageHandler_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(new codec.Interface(PagePtr), val.page);
    encoder.encodeStruct(codec.InterfaceRequest, val.handler);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function PageHandler_GetGroupVisualData_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_GetGroupVisualData_Params.prototype.initDefaults_ = function() {
  };
  PageHandler_GetGroupVisualData_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_GetGroupVisualData_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandler_GetGroupVisualData_Params.encodedSize = codec.kStructHeaderSize + 0;

  PageHandler_GetGroupVisualData_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_GetGroupVisualData_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  PageHandler_GetGroupVisualData_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_GetGroupVisualData_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function PageHandler_GetGroupVisualData_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_GetGroupVisualData_ResponseParams.prototype.initDefaults_ = function() {
    this.data = null;
  };
  PageHandler_GetGroupVisualData_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_GetGroupVisualData_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageHandler_GetGroupVisualData_ResponseParams.data
    err = messageValidator.validateMapPointer(offset + codec.kStructHeaderSize + 0, false, codec.String, new codec.PointerTo(TabGroupVisualData), false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandler_GetGroupVisualData_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  PageHandler_GetGroupVisualData_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new PageHandler_GetGroupVisualData_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.data =
        decoder.decodeMapPointer(codec.String, new codec.PointerTo(TabGroupVisualData));
    return val;
  };

  PageHandler_GetGroupVisualData_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_GetGroupVisualData_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeMapPointer(codec.String, new codec.PointerTo(TabGroupVisualData), val.data);
  };
  function PageHandler_GetTabs_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_GetTabs_Params.prototype.initDefaults_ = function() {
  };
  PageHandler_GetTabs_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_GetTabs_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandler_GetTabs_Params.encodedSize = codec.kStructHeaderSize + 0;

  PageHandler_GetTabs_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_GetTabs_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  PageHandler_GetTabs_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_GetTabs_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function PageHandler_GetTabs_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_GetTabs_ResponseParams.prototype.initDefaults_ = function() {
    this.tabs = null;
  };
  PageHandler_GetTabs_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_GetTabs_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageHandler_GetTabs_ResponseParams.tabs
    err = messageValidator.validateArrayPointer(offset + codec.kStructHeaderSize + 0, 8, new codec.PointerTo(Tab), false, [0], 0);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandler_GetTabs_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  PageHandler_GetTabs_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new PageHandler_GetTabs_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.tabs =
        decoder.decodeArrayPointer(new codec.PointerTo(Tab));
    return val;
  };

  PageHandler_GetTabs_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_GetTabs_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeArrayPointer(new codec.PointerTo(Tab), val.tabs);
  };
  function PageHandler_CloseTab_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_CloseTab_Params.prototype.initDefaults_ = function() {
    this.tabId = 0;
    this.tabWasSwiped = false;
  };
  PageHandler_CloseTab_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_CloseTab_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    return validator.validationError.NONE;
  };

  PageHandler_CloseTab_Params.encodedSize = codec.kStructHeaderSize + 8;

  PageHandler_CloseTab_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_CloseTab_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.tabId =
        decoder.decodeStruct(codec.Int32);
    packed = decoder.readUint8();
    val.tabWasSwiped = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  PageHandler_CloseTab_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_CloseTab_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.tabId);
    packed = 0;
    packed |= (val.tabWasSwiped & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function PageHandler_GroupTab_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_GroupTab_Params.prototype.initDefaults_ = function() {
    this.tabId = 0;
    this.groupId = null;
  };
  PageHandler_GroupTab_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_GroupTab_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    // validate PageHandler_GroupTab_Params.groupId
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 8, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandler_GroupTab_Params.encodedSize = codec.kStructHeaderSize + 16;

  PageHandler_GroupTab_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_GroupTab_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.tabId =
        decoder.decodeStruct(codec.Int32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.groupId =
        decoder.decodeStruct(codec.String);
    return val;
  };

  PageHandler_GroupTab_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_GroupTab_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.tabId);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStruct(codec.String, val.groupId);
  };
  function PageHandler_MoveGroup_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_MoveGroup_Params.prototype.initDefaults_ = function() {
    this.groupId = null;
    this.toIndex = 0;
  };
  PageHandler_MoveGroup_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_MoveGroup_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageHandler_MoveGroup_Params.groupId
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  PageHandler_MoveGroup_Params.encodedSize = codec.kStructHeaderSize + 16;

  PageHandler_MoveGroup_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_MoveGroup_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.groupId =
        decoder.decodeStruct(codec.String);
    val.toIndex =
        decoder.decodeStruct(codec.Int32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  PageHandler_MoveGroup_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_MoveGroup_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.groupId);
    encoder.encodeStruct(codec.Int32, val.toIndex);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function PageHandler_MoveTab_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_MoveTab_Params.prototype.initDefaults_ = function() {
    this.tabId = 0;
    this.toIndex = 0;
  };
  PageHandler_MoveTab_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_MoveTab_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    return validator.validationError.NONE;
  };

  PageHandler_MoveTab_Params.encodedSize = codec.kStructHeaderSize + 8;

  PageHandler_MoveTab_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_MoveTab_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.tabId =
        decoder.decodeStruct(codec.Int32);
    val.toIndex =
        decoder.decodeStruct(codec.Int32);
    return val;
  };

  PageHandler_MoveTab_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_MoveTab_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.tabId);
    encoder.encodeStruct(codec.Int32, val.toIndex);
  };
  function PageHandler_SetThumbnailTracked_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_SetThumbnailTracked_Params.prototype.initDefaults_ = function() {
    this.tabId = 0;
    this.thumbnailTracked = false;
  };
  PageHandler_SetThumbnailTracked_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_SetThumbnailTracked_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    return validator.validationError.NONE;
  };

  PageHandler_SetThumbnailTracked_Params.encodedSize = codec.kStructHeaderSize + 8;

  PageHandler_SetThumbnailTracked_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_SetThumbnailTracked_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.tabId =
        decoder.decodeStruct(codec.Int32);
    packed = decoder.readUint8();
    val.thumbnailTracked = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  PageHandler_SetThumbnailTracked_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_SetThumbnailTracked_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.tabId);
    packed = 0;
    packed |= (val.thumbnailTracked & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function PageHandler_UngroupTab_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_UngroupTab_Params.prototype.initDefaults_ = function() {
    this.tabId = 0;
  };
  PageHandler_UngroupTab_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_UngroupTab_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  PageHandler_UngroupTab_Params.encodedSize = codec.kStructHeaderSize + 8;

  PageHandler_UngroupTab_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_UngroupTab_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.tabId =
        decoder.decodeStruct(codec.Int32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  PageHandler_UngroupTab_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_UngroupTab_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.tabId);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function PageHandler_GetThemeColors_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_GetThemeColors_Params.prototype.initDefaults_ = function() {
  };
  PageHandler_GetThemeColors_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_GetThemeColors_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandler_GetThemeColors_Params.encodedSize = codec.kStructHeaderSize + 0;

  PageHandler_GetThemeColors_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_GetThemeColors_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  PageHandler_GetThemeColors_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_GetThemeColors_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function PageHandler_GetThemeColors_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_GetThemeColors_ResponseParams.prototype.initDefaults_ = function() {
    this.colors = null;
  };
  PageHandler_GetThemeColors_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_GetThemeColors_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageHandler_GetThemeColors_ResponseParams.colors
    err = messageValidator.validateMapPointer(offset + codec.kStructHeaderSize + 0, false, codec.String, codec.String, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandler_GetThemeColors_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  PageHandler_GetThemeColors_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new PageHandler_GetThemeColors_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.colors =
        decoder.decodeMapPointer(codec.String, codec.String);
    return val;
  };

  PageHandler_GetThemeColors_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_GetThemeColors_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeMapPointer(codec.String, codec.String, val.colors);
  };
  function PageHandler_GetLayout_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_GetLayout_Params.prototype.initDefaults_ = function() {
  };
  PageHandler_GetLayout_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_GetLayout_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandler_GetLayout_Params.encodedSize = codec.kStructHeaderSize + 0;

  PageHandler_GetLayout_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_GetLayout_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  PageHandler_GetLayout_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_GetLayout_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function PageHandler_GetLayout_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_GetLayout_ResponseParams.prototype.initDefaults_ = function() {
    this.layout = null;
  };
  PageHandler_GetLayout_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_GetLayout_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageHandler_GetLayout_ResponseParams.layout
    err = messageValidator.validateMapPointer(offset + codec.kStructHeaderSize + 0, false, codec.String, codec.String, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandler_GetLayout_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  PageHandler_GetLayout_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new PageHandler_GetLayout_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.layout =
        decoder.decodeMapPointer(codec.String, codec.String);
    return val;
  };

  PageHandler_GetLayout_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_GetLayout_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeMapPointer(codec.String, codec.String, val.layout);
  };
  function PageHandler_ShowEditDialogForGroup_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_ShowEditDialogForGroup_Params.prototype.initDefaults_ = function() {
    this.groupId = null;
    this.locationX = 0;
    this.locationY = 0;
    this.width = 0;
    this.height = 0;
  };
  PageHandler_ShowEditDialogForGroup_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_ShowEditDialogForGroup_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageHandler_ShowEditDialogForGroup_Params.groupId
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;





    return validator.validationError.NONE;
  };

  PageHandler_ShowEditDialogForGroup_Params.encodedSize = codec.kStructHeaderSize + 24;

  PageHandler_ShowEditDialogForGroup_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_ShowEditDialogForGroup_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.groupId =
        decoder.decodeStruct(codec.String);
    val.locationX =
        decoder.decodeStruct(codec.Int32);
    val.locationY =
        decoder.decodeStruct(codec.Int32);
    val.width =
        decoder.decodeStruct(codec.Int32);
    val.height =
        decoder.decodeStruct(codec.Int32);
    return val;
  };

  PageHandler_ShowEditDialogForGroup_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_ShowEditDialogForGroup_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.groupId);
    encoder.encodeStruct(codec.Int32, val.locationX);
    encoder.encodeStruct(codec.Int32, val.locationY);
    encoder.encodeStruct(codec.Int32, val.width);
    encoder.encodeStruct(codec.Int32, val.height);
  };
  function PageHandler_ShowTabContextMenu_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_ShowTabContextMenu_Params.prototype.initDefaults_ = function() {
    this.tabId = 0;
    this.locationX = 0;
    this.locationY = 0;
  };
  PageHandler_ShowTabContextMenu_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_ShowTabContextMenu_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;




    return validator.validationError.NONE;
  };

  PageHandler_ShowTabContextMenu_Params.encodedSize = codec.kStructHeaderSize + 16;

  PageHandler_ShowTabContextMenu_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_ShowTabContextMenu_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.tabId =
        decoder.decodeStruct(codec.Int32);
    val.locationX =
        decoder.decodeStruct(codec.Int32);
    val.locationY =
        decoder.decodeStruct(codec.Int32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  PageHandler_ShowTabContextMenu_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_ShowTabContextMenu_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.tabId);
    encoder.encodeStruct(codec.Int32, val.locationX);
    encoder.encodeStruct(codec.Int32, val.locationY);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function PageHandler_ShowBackgroundContextMenu_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_ShowBackgroundContextMenu_Params.prototype.initDefaults_ = function() {
    this.locationX = 0;
    this.locationY = 0;
  };
  PageHandler_ShowBackgroundContextMenu_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_ShowBackgroundContextMenu_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    return validator.validationError.NONE;
  };

  PageHandler_ShowBackgroundContextMenu_Params.encodedSize = codec.kStructHeaderSize + 8;

  PageHandler_ShowBackgroundContextMenu_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_ShowBackgroundContextMenu_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.locationX =
        decoder.decodeStruct(codec.Int32);
    val.locationY =
        decoder.decodeStruct(codec.Int32);
    return val;
  };

  PageHandler_ShowBackgroundContextMenu_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_ShowBackgroundContextMenu_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.locationX);
    encoder.encodeStruct(codec.Int32, val.locationY);
  };
  function PageHandler_CloseContainer_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_CloseContainer_Params.prototype.initDefaults_ = function() {
  };
  PageHandler_CloseContainer_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_CloseContainer_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageHandler_CloseContainer_Params.encodedSize = codec.kStructHeaderSize + 0;

  PageHandler_CloseContainer_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_CloseContainer_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  PageHandler_CloseContainer_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_CloseContainer_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function PageHandler_ReportTabActivationDuration_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_ReportTabActivationDuration_Params.prototype.initDefaults_ = function() {
    this.durationMs = 0;
  };
  PageHandler_ReportTabActivationDuration_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_ReportTabActivationDuration_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  PageHandler_ReportTabActivationDuration_Params.encodedSize = codec.kStructHeaderSize + 8;

  PageHandler_ReportTabActivationDuration_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_ReportTabActivationDuration_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.durationMs =
        decoder.decodeStruct(codec.Uint32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  PageHandler_ReportTabActivationDuration_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_ReportTabActivationDuration_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Uint32, val.durationMs);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function PageHandler_ReportTabDataReceivedDuration_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_ReportTabDataReceivedDuration_Params.prototype.initDefaults_ = function() {
    this.tabCount = 0;
    this.durationMs = 0;
  };
  PageHandler_ReportTabDataReceivedDuration_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_ReportTabDataReceivedDuration_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    return validator.validationError.NONE;
  };

  PageHandler_ReportTabDataReceivedDuration_Params.encodedSize = codec.kStructHeaderSize + 8;

  PageHandler_ReportTabDataReceivedDuration_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_ReportTabDataReceivedDuration_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.tabCount =
        decoder.decodeStruct(codec.Uint32);
    val.durationMs =
        decoder.decodeStruct(codec.Uint32);
    return val;
  };

  PageHandler_ReportTabDataReceivedDuration_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_ReportTabDataReceivedDuration_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Uint32, val.tabCount);
    encoder.encodeStruct(codec.Uint32, val.durationMs);
  };
  function PageHandler_ReportTabCreationDuration_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageHandler_ReportTabCreationDuration_Params.prototype.initDefaults_ = function() {
    this.tabCount = 0;
    this.durationMs = 0;
  };
  PageHandler_ReportTabCreationDuration_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageHandler_ReportTabCreationDuration_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    return validator.validationError.NONE;
  };

  PageHandler_ReportTabCreationDuration_Params.encodedSize = codec.kStructHeaderSize + 8;

  PageHandler_ReportTabCreationDuration_Params.decode = function(decoder) {
    var packed;
    var val = new PageHandler_ReportTabCreationDuration_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.tabCount =
        decoder.decodeStruct(codec.Uint32);
    val.durationMs =
        decoder.decodeStruct(codec.Uint32);
    return val;
  };

  PageHandler_ReportTabCreationDuration_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageHandler_ReportTabCreationDuration_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Uint32, val.tabCount);
    encoder.encodeStruct(codec.Uint32, val.durationMs);
  };
  function Page_LayoutChanged_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  Page_LayoutChanged_Params.prototype.initDefaults_ = function() {
    this.layout = null;
  };
  Page_LayoutChanged_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  Page_LayoutChanged_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate Page_LayoutChanged_Params.layout
    err = messageValidator.validateMapPointer(offset + codec.kStructHeaderSize + 0, false, codec.String, codec.String, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  Page_LayoutChanged_Params.encodedSize = codec.kStructHeaderSize + 8;

  Page_LayoutChanged_Params.decode = function(decoder) {
    var packed;
    var val = new Page_LayoutChanged_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.layout =
        decoder.decodeMapPointer(codec.String, codec.String);
    return val;
  };

  Page_LayoutChanged_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(Page_LayoutChanged_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeMapPointer(codec.String, codec.String, val.layout);
  };
  function Page_ReceivedKeyboardFocus_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  Page_ReceivedKeyboardFocus_Params.prototype.initDefaults_ = function() {
  };
  Page_ReceivedKeyboardFocus_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  Page_ReceivedKeyboardFocus_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  Page_ReceivedKeyboardFocus_Params.encodedSize = codec.kStructHeaderSize + 0;

  Page_ReceivedKeyboardFocus_Params.decode = function(decoder) {
    var packed;
    var val = new Page_ReceivedKeyboardFocus_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  Page_ReceivedKeyboardFocus_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(Page_ReceivedKeyboardFocus_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function Page_ContextMenuClosed_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  Page_ContextMenuClosed_Params.prototype.initDefaults_ = function() {
  };
  Page_ContextMenuClosed_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  Page_ContextMenuClosed_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  Page_ContextMenuClosed_Params.encodedSize = codec.kStructHeaderSize + 0;

  Page_ContextMenuClosed_Params.decode = function(decoder) {
    var packed;
    var val = new Page_ContextMenuClosed_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  Page_ContextMenuClosed_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(Page_ContextMenuClosed_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function Page_LongPress_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  Page_LongPress_Params.prototype.initDefaults_ = function() {
  };
  Page_LongPress_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  Page_LongPress_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  Page_LongPress_Params.encodedSize = codec.kStructHeaderSize + 0;

  Page_LongPress_Params.decode = function(decoder) {
    var packed;
    var val = new Page_LongPress_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  Page_LongPress_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(Page_LongPress_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function Page_TabGroupVisualsChanged_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  Page_TabGroupVisualsChanged_Params.prototype.initDefaults_ = function() {
    this.groupId = null;
    this.tabGroup = null;
  };
  Page_TabGroupVisualsChanged_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  Page_TabGroupVisualsChanged_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate Page_TabGroupVisualsChanged_Params.groupId
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate Page_TabGroupVisualsChanged_Params.tabGroup
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, TabGroupVisualData, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  Page_TabGroupVisualsChanged_Params.encodedSize = codec.kStructHeaderSize + 16;

  Page_TabGroupVisualsChanged_Params.decode = function(decoder) {
    var packed;
    var val = new Page_TabGroupVisualsChanged_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.groupId =
        decoder.decodeStruct(codec.String);
    val.tabGroup =
        decoder.decodeStructPointer(TabGroupVisualData);
    return val;
  };

  Page_TabGroupVisualsChanged_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(Page_TabGroupVisualsChanged_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.groupId);
    encoder.encodeStructPointer(TabGroupVisualData, val.tabGroup);
  };
  function Page_TabGroupMoved_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  Page_TabGroupMoved_Params.prototype.initDefaults_ = function() {
    this.groupId = null;
    this.index = 0;
  };
  Page_TabGroupMoved_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  Page_TabGroupMoved_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate Page_TabGroupMoved_Params.groupId
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  Page_TabGroupMoved_Params.encodedSize = codec.kStructHeaderSize + 16;

  Page_TabGroupMoved_Params.decode = function(decoder) {
    var packed;
    var val = new Page_TabGroupMoved_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.groupId =
        decoder.decodeStruct(codec.String);
    val.index =
        decoder.decodeStruct(codec.Int32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  Page_TabGroupMoved_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(Page_TabGroupMoved_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.groupId);
    encoder.encodeStruct(codec.Int32, val.index);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function Page_TabGroupClosed_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  Page_TabGroupClosed_Params.prototype.initDefaults_ = function() {
    this.groupId = null;
  };
  Page_TabGroupClosed_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  Page_TabGroupClosed_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate Page_TabGroupClosed_Params.groupId
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  Page_TabGroupClosed_Params.encodedSize = codec.kStructHeaderSize + 8;

  Page_TabGroupClosed_Params.decode = function(decoder) {
    var packed;
    var val = new Page_TabGroupClosed_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.groupId =
        decoder.decodeStruct(codec.String);
    return val;
  };

  Page_TabGroupClosed_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(Page_TabGroupClosed_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.groupId);
  };
  function Page_TabGroupStateChanged_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  Page_TabGroupStateChanged_Params.prototype.initDefaults_ = function() {
    this.tabId = 0;
    this.index = 0;
    this.groupId = null;
  };
  Page_TabGroupStateChanged_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  Page_TabGroupStateChanged_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;




    // validate Page_TabGroupStateChanged_Params.groupId
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 8, true)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  Page_TabGroupStateChanged_Params.encodedSize = codec.kStructHeaderSize + 16;

  Page_TabGroupStateChanged_Params.decode = function(decoder) {
    var packed;
    var val = new Page_TabGroupStateChanged_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.tabId =
        decoder.decodeStruct(codec.Int32);
    val.index =
        decoder.decodeStruct(codec.Int32);
    val.groupId =
        decoder.decodeStruct(codec.NullableString);
    return val;
  };

  Page_TabGroupStateChanged_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(Page_TabGroupStateChanged_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.tabId);
    encoder.encodeStruct(codec.Int32, val.index);
    encoder.encodeStruct(codec.NullableString, val.groupId);
  };
  function Page_TabCloseCancelled_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  Page_TabCloseCancelled_Params.prototype.initDefaults_ = function() {
    this.tabId = 0;
  };
  Page_TabCloseCancelled_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  Page_TabCloseCancelled_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  Page_TabCloseCancelled_Params.encodedSize = codec.kStructHeaderSize + 8;

  Page_TabCloseCancelled_Params.decode = function(decoder) {
    var packed;
    var val = new Page_TabCloseCancelled_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.tabId =
        decoder.decodeStruct(codec.Int32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  Page_TabCloseCancelled_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(Page_TabCloseCancelled_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.tabId);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function Page_TabCreated_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  Page_TabCreated_Params.prototype.initDefaults_ = function() {
    this.tab = null;
  };
  Page_TabCreated_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  Page_TabCreated_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate Page_TabCreated_Params.tab
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, Tab, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  Page_TabCreated_Params.encodedSize = codec.kStructHeaderSize + 8;

  Page_TabCreated_Params.decode = function(decoder) {
    var packed;
    var val = new Page_TabCreated_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.tab =
        decoder.decodeStructPointer(Tab);
    return val;
  };

  Page_TabCreated_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(Page_TabCreated_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(Tab, val.tab);
  };
  function Page_TabRemoved_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  Page_TabRemoved_Params.prototype.initDefaults_ = function() {
    this.tabId = 0;
  };
  Page_TabRemoved_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  Page_TabRemoved_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  Page_TabRemoved_Params.encodedSize = codec.kStructHeaderSize + 8;

  Page_TabRemoved_Params.decode = function(decoder) {
    var packed;
    var val = new Page_TabRemoved_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.tabId =
        decoder.decodeStruct(codec.Int32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  Page_TabRemoved_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(Page_TabRemoved_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.tabId);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function Page_TabMoved_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  Page_TabMoved_Params.prototype.initDefaults_ = function() {
    this.tabId = 0;
    this.toIndex = 0;
    this.inPinned = false;
  };
  Page_TabMoved_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  Page_TabMoved_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;




    return validator.validationError.NONE;
  };

  Page_TabMoved_Params.encodedSize = codec.kStructHeaderSize + 16;

  Page_TabMoved_Params.decode = function(decoder) {
    var packed;
    var val = new Page_TabMoved_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.tabId =
        decoder.decodeStruct(codec.Int32);
    val.toIndex =
        decoder.decodeStruct(codec.Int32);
    packed = decoder.readUint8();
    val.inPinned = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  Page_TabMoved_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(Page_TabMoved_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.tabId);
    encoder.encodeStruct(codec.Int32, val.toIndex);
    packed = 0;
    packed |= (val.inPinned & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function Page_TabReplaced_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  Page_TabReplaced_Params.prototype.initDefaults_ = function() {
    this.tabId = 0;
    this.newTabId = 0;
  };
  Page_TabReplaced_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  Page_TabReplaced_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    return validator.validationError.NONE;
  };

  Page_TabReplaced_Params.encodedSize = codec.kStructHeaderSize + 8;

  Page_TabReplaced_Params.decode = function(decoder) {
    var packed;
    var val = new Page_TabReplaced_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.tabId =
        decoder.decodeStruct(codec.Int32);
    val.newTabId =
        decoder.decodeStruct(codec.Int32);
    return val;
  };

  Page_TabReplaced_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(Page_TabReplaced_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.tabId);
    encoder.encodeStruct(codec.Int32, val.newTabId);
  };
  function Page_TabActiveChanged_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  Page_TabActiveChanged_Params.prototype.initDefaults_ = function() {
    this.tabId = 0;
  };
  Page_TabActiveChanged_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  Page_TabActiveChanged_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  Page_TabActiveChanged_Params.encodedSize = codec.kStructHeaderSize + 8;

  Page_TabActiveChanged_Params.decode = function(decoder) {
    var packed;
    var val = new Page_TabActiveChanged_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.tabId =
        decoder.decodeStruct(codec.Int32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  Page_TabActiveChanged_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(Page_TabActiveChanged_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.tabId);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function Page_TabUpdated_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  Page_TabUpdated_Params.prototype.initDefaults_ = function() {
    this.tab = null;
  };
  Page_TabUpdated_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  Page_TabUpdated_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate Page_TabUpdated_Params.tab
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, Tab, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  Page_TabUpdated_Params.encodedSize = codec.kStructHeaderSize + 8;

  Page_TabUpdated_Params.decode = function(decoder) {
    var packed;
    var val = new Page_TabUpdated_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.tab =
        decoder.decodeStructPointer(Tab);
    return val;
  };

  Page_TabUpdated_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(Page_TabUpdated_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(Tab, val.tab);
  };
  function Page_TabThumbnailUpdated_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  Page_TabThumbnailUpdated_Params.prototype.initDefaults_ = function() {
    this.tabId = 0;
    this.dataUri = null;
  };
  Page_TabThumbnailUpdated_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  Page_TabThumbnailUpdated_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    // validate Page_TabThumbnailUpdated_Params.dataUri
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 8, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  Page_TabThumbnailUpdated_Params.encodedSize = codec.kStructHeaderSize + 16;

  Page_TabThumbnailUpdated_Params.decode = function(decoder) {
    var packed;
    var val = new Page_TabThumbnailUpdated_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.tabId =
        decoder.decodeStruct(codec.Int32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.dataUri =
        decoder.decodeStruct(codec.String);
    return val;
  };

  Page_TabThumbnailUpdated_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(Page_TabThumbnailUpdated_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.tabId);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStruct(codec.String, val.dataUri);
  };
  function Page_ShowContextMenu_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  Page_ShowContextMenu_Params.prototype.initDefaults_ = function() {
  };
  Page_ShowContextMenu_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  Page_ShowContextMenu_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  Page_ShowContextMenu_Params.encodedSize = codec.kStructHeaderSize + 0;

  Page_ShowContextMenu_Params.decode = function(decoder) {
    var packed;
    var val = new Page_ShowContextMenu_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  Page_ShowContextMenu_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(Page_ShowContextMenu_Params.encodedSize);
    encoder.writeUint32(0);
  };
  var kPageHandlerFactory_CreatePageHandler_Name = 445910499;

  function PageHandlerFactoryPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(PageHandlerFactory,
                                                   handleOrPtrInfo);
  }

  function PageHandlerFactoryAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        PageHandlerFactory, associatedInterfacePtrInfo);
  }

  PageHandlerFactoryAssociatedPtr.prototype =
      Object.create(PageHandlerFactoryPtr.prototype);
  PageHandlerFactoryAssociatedPtr.prototype.constructor =
      PageHandlerFactoryAssociatedPtr;

  function PageHandlerFactoryProxy(receiver) {
    this.receiver_ = receiver;
  }
  PageHandlerFactoryPtr.prototype.createPageHandler = function() {
    return PageHandlerFactoryProxy.prototype.createPageHandler
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerFactoryProxy.prototype.createPageHandler = function(page, handler) {
    var params_ = new PageHandlerFactory_CreatePageHandler_Params();
    params_.page = page;
    params_.handler = handler;
    var builder = new codec.MessageV0Builder(
        kPageHandlerFactory_CreatePageHandler_Name,
        codec.align(PageHandlerFactory_CreatePageHandler_Params.encodedSize));
    builder.encodeStruct(PageHandlerFactory_CreatePageHandler_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function PageHandlerFactoryStub(delegate) {
    this.delegate_ = delegate;
  }
  PageHandlerFactoryStub.prototype.createPageHandler = function(page, handler) {
    return this.delegate_ && this.delegate_.createPageHandler && this.delegate_.createPageHandler(page, handler);
  }

  PageHandlerFactoryStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kPageHandlerFactory_CreatePageHandler_Name:
      var params = reader.decodeStruct(PageHandlerFactory_CreatePageHandler_Params);
      this.createPageHandler(params.page, params.handler);
      return true;
    default:
      return false;
    }
  };

  PageHandlerFactoryStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validatePageHandlerFactoryRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kPageHandlerFactory_CreatePageHandler_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageHandlerFactory_CreatePageHandler_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validatePageHandlerFactoryResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var PageHandlerFactory = {
    name: 'tab_strip.mojom.PageHandlerFactory',
    kVersion: 0,
    ptrClass: PageHandlerFactoryPtr,
    proxyClass: PageHandlerFactoryProxy,
    stubClass: PageHandlerFactoryStub,
    validateRequest: validatePageHandlerFactoryRequest,
    validateResponse: null,
  };
  PageHandlerFactoryStub.prototype.validator = validatePageHandlerFactoryRequest;
  PageHandlerFactoryProxy.prototype.validator = null;
  var kPageHandler_GetGroupVisualData_Name = 1298547416;
  var kPageHandler_GetTabs_Name = 1962586384;
  var kPageHandler_CloseTab_Name = 1718134429;
  var kPageHandler_GroupTab_Name = 1770514989;
  var kPageHandler_MoveGroup_Name = 1004344447;
  var kPageHandler_MoveTab_Name = 1016706116;
  var kPageHandler_SetThumbnailTracked_Name = 1532274342;
  var kPageHandler_UngroupTab_Name = 1863157924;
  var kPageHandler_GetThemeColors_Name = 1109409947;
  var kPageHandler_GetLayout_Name = 218421454;
  var kPageHandler_ShowEditDialogForGroup_Name = 715592227;
  var kPageHandler_ShowTabContextMenu_Name = 1654545427;
  var kPageHandler_ShowBackgroundContextMenu_Name = 85950616;
  var kPageHandler_CloseContainer_Name = 1988749394;
  var kPageHandler_ReportTabActivationDuration_Name = 2138288360;
  var kPageHandler_ReportTabDataReceivedDuration_Name = 1933834733;
  var kPageHandler_ReportTabCreationDuration_Name = 411533922;

  function PageHandlerPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(PageHandler,
                                                   handleOrPtrInfo);
  }

  function PageHandlerAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        PageHandler, associatedInterfacePtrInfo);
  }

  PageHandlerAssociatedPtr.prototype =
      Object.create(PageHandlerPtr.prototype);
  PageHandlerAssociatedPtr.prototype.constructor =
      PageHandlerAssociatedPtr;

  function PageHandlerProxy(receiver) {
    this.receiver_ = receiver;
  }
  PageHandlerPtr.prototype.getGroupVisualData = function() {
    return PageHandlerProxy.prototype.getGroupVisualData
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.getGroupVisualData = function() {
    var params_ = new PageHandler_GetGroupVisualData_Params();
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kPageHandler_GetGroupVisualData_Name,
          codec.align(PageHandler_GetGroupVisualData_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(PageHandler_GetGroupVisualData_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(PageHandler_GetGroupVisualData_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  PageHandlerPtr.prototype.getTabs = function() {
    return PageHandlerProxy.prototype.getTabs
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.getTabs = function() {
    var params_ = new PageHandler_GetTabs_Params();
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kPageHandler_GetTabs_Name,
          codec.align(PageHandler_GetTabs_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(PageHandler_GetTabs_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(PageHandler_GetTabs_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  PageHandlerPtr.prototype.closeTab = function() {
    return PageHandlerProxy.prototype.closeTab
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.closeTab = function(tabId, tabWasSwiped) {
    var params_ = new PageHandler_CloseTab_Params();
    params_.tabId = tabId;
    params_.tabWasSwiped = tabWasSwiped;
    var builder = new codec.MessageV0Builder(
        kPageHandler_CloseTab_Name,
        codec.align(PageHandler_CloseTab_Params.encodedSize));
    builder.encodeStruct(PageHandler_CloseTab_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PageHandlerPtr.prototype.groupTab = function() {
    return PageHandlerProxy.prototype.groupTab
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.groupTab = function(tabId, groupId) {
    var params_ = new PageHandler_GroupTab_Params();
    params_.tabId = tabId;
    params_.groupId = groupId;
    var builder = new codec.MessageV0Builder(
        kPageHandler_GroupTab_Name,
        codec.align(PageHandler_GroupTab_Params.encodedSize));
    builder.encodeStruct(PageHandler_GroupTab_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PageHandlerPtr.prototype.moveGroup = function() {
    return PageHandlerProxy.prototype.moveGroup
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.moveGroup = function(groupId, toIndex) {
    var params_ = new PageHandler_MoveGroup_Params();
    params_.groupId = groupId;
    params_.toIndex = toIndex;
    var builder = new codec.MessageV0Builder(
        kPageHandler_MoveGroup_Name,
        codec.align(PageHandler_MoveGroup_Params.encodedSize));
    builder.encodeStruct(PageHandler_MoveGroup_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PageHandlerPtr.prototype.moveTab = function() {
    return PageHandlerProxy.prototype.moveTab
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.moveTab = function(tabId, toIndex) {
    var params_ = new PageHandler_MoveTab_Params();
    params_.tabId = tabId;
    params_.toIndex = toIndex;
    var builder = new codec.MessageV0Builder(
        kPageHandler_MoveTab_Name,
        codec.align(PageHandler_MoveTab_Params.encodedSize));
    builder.encodeStruct(PageHandler_MoveTab_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PageHandlerPtr.prototype.setThumbnailTracked = function() {
    return PageHandlerProxy.prototype.setThumbnailTracked
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.setThumbnailTracked = function(tabId, thumbnailTracked) {
    var params_ = new PageHandler_SetThumbnailTracked_Params();
    params_.tabId = tabId;
    params_.thumbnailTracked = thumbnailTracked;
    var builder = new codec.MessageV0Builder(
        kPageHandler_SetThumbnailTracked_Name,
        codec.align(PageHandler_SetThumbnailTracked_Params.encodedSize));
    builder.encodeStruct(PageHandler_SetThumbnailTracked_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PageHandlerPtr.prototype.ungroupTab = function() {
    return PageHandlerProxy.prototype.ungroupTab
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.ungroupTab = function(tabId) {
    var params_ = new PageHandler_UngroupTab_Params();
    params_.tabId = tabId;
    var builder = new codec.MessageV0Builder(
        kPageHandler_UngroupTab_Name,
        codec.align(PageHandler_UngroupTab_Params.encodedSize));
    builder.encodeStruct(PageHandler_UngroupTab_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PageHandlerPtr.prototype.getThemeColors = function() {
    return PageHandlerProxy.prototype.getThemeColors
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.getThemeColors = function() {
    var params_ = new PageHandler_GetThemeColors_Params();
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kPageHandler_GetThemeColors_Name,
          codec.align(PageHandler_GetThemeColors_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(PageHandler_GetThemeColors_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(PageHandler_GetThemeColors_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  PageHandlerPtr.prototype.getLayout = function() {
    return PageHandlerProxy.prototype.getLayout
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.getLayout = function() {
    var params_ = new PageHandler_GetLayout_Params();
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kPageHandler_GetLayout_Name,
          codec.align(PageHandler_GetLayout_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(PageHandler_GetLayout_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(PageHandler_GetLayout_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  PageHandlerPtr.prototype.showEditDialogForGroup = function() {
    return PageHandlerProxy.prototype.showEditDialogForGroup
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.showEditDialogForGroup = function(groupId, locationX, locationY, width, height) {
    var params_ = new PageHandler_ShowEditDialogForGroup_Params();
    params_.groupId = groupId;
    params_.locationX = locationX;
    params_.locationY = locationY;
    params_.width = width;
    params_.height = height;
    var builder = new codec.MessageV0Builder(
        kPageHandler_ShowEditDialogForGroup_Name,
        codec.align(PageHandler_ShowEditDialogForGroup_Params.encodedSize));
    builder.encodeStruct(PageHandler_ShowEditDialogForGroup_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PageHandlerPtr.prototype.showTabContextMenu = function() {
    return PageHandlerProxy.prototype.showTabContextMenu
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.showTabContextMenu = function(tabId, locationX, locationY) {
    var params_ = new PageHandler_ShowTabContextMenu_Params();
    params_.tabId = tabId;
    params_.locationX = locationX;
    params_.locationY = locationY;
    var builder = new codec.MessageV0Builder(
        kPageHandler_ShowTabContextMenu_Name,
        codec.align(PageHandler_ShowTabContextMenu_Params.encodedSize));
    builder.encodeStruct(PageHandler_ShowTabContextMenu_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PageHandlerPtr.prototype.showBackgroundContextMenu = function() {
    return PageHandlerProxy.prototype.showBackgroundContextMenu
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.showBackgroundContextMenu = function(locationX, locationY) {
    var params_ = new PageHandler_ShowBackgroundContextMenu_Params();
    params_.locationX = locationX;
    params_.locationY = locationY;
    var builder = new codec.MessageV0Builder(
        kPageHandler_ShowBackgroundContextMenu_Name,
        codec.align(PageHandler_ShowBackgroundContextMenu_Params.encodedSize));
    builder.encodeStruct(PageHandler_ShowBackgroundContextMenu_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PageHandlerPtr.prototype.closeContainer = function() {
    return PageHandlerProxy.prototype.closeContainer
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.closeContainer = function() {
    var params_ = new PageHandler_CloseContainer_Params();
    var builder = new codec.MessageV0Builder(
        kPageHandler_CloseContainer_Name,
        codec.align(PageHandler_CloseContainer_Params.encodedSize));
    builder.encodeStruct(PageHandler_CloseContainer_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PageHandlerPtr.prototype.reportTabActivationDuration = function() {
    return PageHandlerProxy.prototype.reportTabActivationDuration
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.reportTabActivationDuration = function(durationMs) {
    var params_ = new PageHandler_ReportTabActivationDuration_Params();
    params_.durationMs = durationMs;
    var builder = new codec.MessageV0Builder(
        kPageHandler_ReportTabActivationDuration_Name,
        codec.align(PageHandler_ReportTabActivationDuration_Params.encodedSize));
    builder.encodeStruct(PageHandler_ReportTabActivationDuration_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PageHandlerPtr.prototype.reportTabDataReceivedDuration = function() {
    return PageHandlerProxy.prototype.reportTabDataReceivedDuration
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.reportTabDataReceivedDuration = function(tabCount, durationMs) {
    var params_ = new PageHandler_ReportTabDataReceivedDuration_Params();
    params_.tabCount = tabCount;
    params_.durationMs = durationMs;
    var builder = new codec.MessageV0Builder(
        kPageHandler_ReportTabDataReceivedDuration_Name,
        codec.align(PageHandler_ReportTabDataReceivedDuration_Params.encodedSize));
    builder.encodeStruct(PageHandler_ReportTabDataReceivedDuration_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PageHandlerPtr.prototype.reportTabCreationDuration = function() {
    return PageHandlerProxy.prototype.reportTabCreationDuration
        .apply(this.ptr.getProxy(), arguments);
  };

  PageHandlerProxy.prototype.reportTabCreationDuration = function(tabCount, durationMs) {
    var params_ = new PageHandler_ReportTabCreationDuration_Params();
    params_.tabCount = tabCount;
    params_.durationMs = durationMs;
    var builder = new codec.MessageV0Builder(
        kPageHandler_ReportTabCreationDuration_Name,
        codec.align(PageHandler_ReportTabCreationDuration_Params.encodedSize));
    builder.encodeStruct(PageHandler_ReportTabCreationDuration_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function PageHandlerStub(delegate) {
    this.delegate_ = delegate;
  }
  PageHandlerStub.prototype.getGroupVisualData = function() {
    return this.delegate_ && this.delegate_.getGroupVisualData && this.delegate_.getGroupVisualData();
  }
  PageHandlerStub.prototype.getTabs = function() {
    return this.delegate_ && this.delegate_.getTabs && this.delegate_.getTabs();
  }
  PageHandlerStub.prototype.closeTab = function(tabId, tabWasSwiped) {
    return this.delegate_ && this.delegate_.closeTab && this.delegate_.closeTab(tabId, tabWasSwiped);
  }
  PageHandlerStub.prototype.groupTab = function(tabId, groupId) {
    return this.delegate_ && this.delegate_.groupTab && this.delegate_.groupTab(tabId, groupId);
  }
  PageHandlerStub.prototype.moveGroup = function(groupId, toIndex) {
    return this.delegate_ && this.delegate_.moveGroup && this.delegate_.moveGroup(groupId, toIndex);
  }
  PageHandlerStub.prototype.moveTab = function(tabId, toIndex) {
    return this.delegate_ && this.delegate_.moveTab && this.delegate_.moveTab(tabId, toIndex);
  }
  PageHandlerStub.prototype.setThumbnailTracked = function(tabId, thumbnailTracked) {
    return this.delegate_ && this.delegate_.setThumbnailTracked && this.delegate_.setThumbnailTracked(tabId, thumbnailTracked);
  }
  PageHandlerStub.prototype.ungroupTab = function(tabId) {
    return this.delegate_ && this.delegate_.ungroupTab && this.delegate_.ungroupTab(tabId);
  }
  PageHandlerStub.prototype.getThemeColors = function() {
    return this.delegate_ && this.delegate_.getThemeColors && this.delegate_.getThemeColors();
  }
  PageHandlerStub.prototype.getLayout = function() {
    return this.delegate_ && this.delegate_.getLayout && this.delegate_.getLayout();
  }
  PageHandlerStub.prototype.showEditDialogForGroup = function(groupId, locationX, locationY, width, height) {
    return this.delegate_ && this.delegate_.showEditDialogForGroup && this.delegate_.showEditDialogForGroup(groupId, locationX, locationY, width, height);
  }
  PageHandlerStub.prototype.showTabContextMenu = function(tabId, locationX, locationY) {
    return this.delegate_ && this.delegate_.showTabContextMenu && this.delegate_.showTabContextMenu(tabId, locationX, locationY);
  }
  PageHandlerStub.prototype.showBackgroundContextMenu = function(locationX, locationY) {
    return this.delegate_ && this.delegate_.showBackgroundContextMenu && this.delegate_.showBackgroundContextMenu(locationX, locationY);
  }
  PageHandlerStub.prototype.closeContainer = function() {
    return this.delegate_ && this.delegate_.closeContainer && this.delegate_.closeContainer();
  }
  PageHandlerStub.prototype.reportTabActivationDuration = function(durationMs) {
    return this.delegate_ && this.delegate_.reportTabActivationDuration && this.delegate_.reportTabActivationDuration(durationMs);
  }
  PageHandlerStub.prototype.reportTabDataReceivedDuration = function(tabCount, durationMs) {
    return this.delegate_ && this.delegate_.reportTabDataReceivedDuration && this.delegate_.reportTabDataReceivedDuration(tabCount, durationMs);
  }
  PageHandlerStub.prototype.reportTabCreationDuration = function(tabCount, durationMs) {
    return this.delegate_ && this.delegate_.reportTabCreationDuration && this.delegate_.reportTabCreationDuration(tabCount, durationMs);
  }

  PageHandlerStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kPageHandler_CloseTab_Name:
      var params = reader.decodeStruct(PageHandler_CloseTab_Params);
      this.closeTab(params.tabId, params.tabWasSwiped);
      return true;
    case kPageHandler_GroupTab_Name:
      var params = reader.decodeStruct(PageHandler_GroupTab_Params);
      this.groupTab(params.tabId, params.groupId);
      return true;
    case kPageHandler_MoveGroup_Name:
      var params = reader.decodeStruct(PageHandler_MoveGroup_Params);
      this.moveGroup(params.groupId, params.toIndex);
      return true;
    case kPageHandler_MoveTab_Name:
      var params = reader.decodeStruct(PageHandler_MoveTab_Params);
      this.moveTab(params.tabId, params.toIndex);
      return true;
    case kPageHandler_SetThumbnailTracked_Name:
      var params = reader.decodeStruct(PageHandler_SetThumbnailTracked_Params);
      this.setThumbnailTracked(params.tabId, params.thumbnailTracked);
      return true;
    case kPageHandler_UngroupTab_Name:
      var params = reader.decodeStruct(PageHandler_UngroupTab_Params);
      this.ungroupTab(params.tabId);
      return true;
    case kPageHandler_ShowEditDialogForGroup_Name:
      var params = reader.decodeStruct(PageHandler_ShowEditDialogForGroup_Params);
      this.showEditDialogForGroup(params.groupId, params.locationX, params.locationY, params.width, params.height);
      return true;
    case kPageHandler_ShowTabContextMenu_Name:
      var params = reader.decodeStruct(PageHandler_ShowTabContextMenu_Params);
      this.showTabContextMenu(params.tabId, params.locationX, params.locationY);
      return true;
    case kPageHandler_ShowBackgroundContextMenu_Name:
      var params = reader.decodeStruct(PageHandler_ShowBackgroundContextMenu_Params);
      this.showBackgroundContextMenu(params.locationX, params.locationY);
      return true;
    case kPageHandler_CloseContainer_Name:
      var params = reader.decodeStruct(PageHandler_CloseContainer_Params);
      this.closeContainer();
      return true;
    case kPageHandler_ReportTabActivationDuration_Name:
      var params = reader.decodeStruct(PageHandler_ReportTabActivationDuration_Params);
      this.reportTabActivationDuration(params.durationMs);
      return true;
    case kPageHandler_ReportTabDataReceivedDuration_Name:
      var params = reader.decodeStruct(PageHandler_ReportTabDataReceivedDuration_Params);
      this.reportTabDataReceivedDuration(params.tabCount, params.durationMs);
      return true;
    case kPageHandler_ReportTabCreationDuration_Name:
      var params = reader.decodeStruct(PageHandler_ReportTabCreationDuration_Params);
      this.reportTabCreationDuration(params.tabCount, params.durationMs);
      return true;
    default:
      return false;
    }
  };

  PageHandlerStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kPageHandler_GetGroupVisualData_Name:
      var params = reader.decodeStruct(PageHandler_GetGroupVisualData_Params);
      this.getGroupVisualData().then(function(response) {
        var responseParams =
            new PageHandler_GetGroupVisualData_ResponseParams();
        responseParams.data = response.data;
        var builder = new codec.MessageV1Builder(
            kPageHandler_GetGroupVisualData_Name,
            codec.align(PageHandler_GetGroupVisualData_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(PageHandler_GetGroupVisualData_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kPageHandler_GetTabs_Name:
      var params = reader.decodeStruct(PageHandler_GetTabs_Params);
      this.getTabs().then(function(response) {
        var responseParams =
            new PageHandler_GetTabs_ResponseParams();
        responseParams.tabs = response.tabs;
        var builder = new codec.MessageV1Builder(
            kPageHandler_GetTabs_Name,
            codec.align(PageHandler_GetTabs_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(PageHandler_GetTabs_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kPageHandler_GetThemeColors_Name:
      var params = reader.decodeStruct(PageHandler_GetThemeColors_Params);
      this.getThemeColors().then(function(response) {
        var responseParams =
            new PageHandler_GetThemeColors_ResponseParams();
        responseParams.colors = response.colors;
        var builder = new codec.MessageV1Builder(
            kPageHandler_GetThemeColors_Name,
            codec.align(PageHandler_GetThemeColors_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(PageHandler_GetThemeColors_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kPageHandler_GetLayout_Name:
      var params = reader.decodeStruct(PageHandler_GetLayout_Params);
      this.getLayout().then(function(response) {
        var responseParams =
            new PageHandler_GetLayout_ResponseParams();
        responseParams.layout = response.layout;
        var builder = new codec.MessageV1Builder(
            kPageHandler_GetLayout_Name,
            codec.align(PageHandler_GetLayout_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(PageHandler_GetLayout_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    default:
      return false;
    }
  };

  function validatePageHandlerRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kPageHandler_GetGroupVisualData_Name:
        if (message.expectsResponse())
          paramsClass = PageHandler_GetGroupVisualData_Params;
      break;
      case kPageHandler_GetTabs_Name:
        if (message.expectsResponse())
          paramsClass = PageHandler_GetTabs_Params;
      break;
      case kPageHandler_CloseTab_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageHandler_CloseTab_Params;
      break;
      case kPageHandler_GroupTab_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageHandler_GroupTab_Params;
      break;
      case kPageHandler_MoveGroup_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageHandler_MoveGroup_Params;
      break;
      case kPageHandler_MoveTab_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageHandler_MoveTab_Params;
      break;
      case kPageHandler_SetThumbnailTracked_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageHandler_SetThumbnailTracked_Params;
      break;
      case kPageHandler_UngroupTab_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageHandler_UngroupTab_Params;
      break;
      case kPageHandler_GetThemeColors_Name:
        if (message.expectsResponse())
          paramsClass = PageHandler_GetThemeColors_Params;
      break;
      case kPageHandler_GetLayout_Name:
        if (message.expectsResponse())
          paramsClass = PageHandler_GetLayout_Params;
      break;
      case kPageHandler_ShowEditDialogForGroup_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageHandler_ShowEditDialogForGroup_Params;
      break;
      case kPageHandler_ShowTabContextMenu_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageHandler_ShowTabContextMenu_Params;
      break;
      case kPageHandler_ShowBackgroundContextMenu_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageHandler_ShowBackgroundContextMenu_Params;
      break;
      case kPageHandler_CloseContainer_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageHandler_CloseContainer_Params;
      break;
      case kPageHandler_ReportTabActivationDuration_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageHandler_ReportTabActivationDuration_Params;
      break;
      case kPageHandler_ReportTabDataReceivedDuration_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageHandler_ReportTabDataReceivedDuration_Params;
      break;
      case kPageHandler_ReportTabCreationDuration_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageHandler_ReportTabCreationDuration_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validatePageHandlerResponse(messageValidator) {
   var message = messageValidator.message;
   var paramsClass = null;
   switch (message.getName()) {
      case kPageHandler_GetGroupVisualData_Name:
        if (message.isResponse())
          paramsClass = PageHandler_GetGroupVisualData_ResponseParams;
        break;
      case kPageHandler_GetTabs_Name:
        if (message.isResponse())
          paramsClass = PageHandler_GetTabs_ResponseParams;
        break;
      case kPageHandler_GetThemeColors_Name:
        if (message.isResponse())
          paramsClass = PageHandler_GetThemeColors_ResponseParams;
        break;
      case kPageHandler_GetLayout_Name:
        if (message.isResponse())
          paramsClass = PageHandler_GetLayout_ResponseParams;
        break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  var PageHandler = {
    name: 'tab_strip.mojom.PageHandler',
    kVersion: 0,
    ptrClass: PageHandlerPtr,
    proxyClass: PageHandlerProxy,
    stubClass: PageHandlerStub,
    validateRequest: validatePageHandlerRequest,
    validateResponse: validatePageHandlerResponse,
  };
  PageHandlerStub.prototype.validator = validatePageHandlerRequest;
  PageHandlerProxy.prototype.validator = validatePageHandlerResponse;
  var kPage_LayoutChanged_Name = 1002832096;
  var kPage_ReceivedKeyboardFocus_Name = 2119873422;
  var kPage_ContextMenuClosed_Name = 196448256;
  var kPage_LongPress_Name = 772908856;
  var kPage_TabGroupVisualsChanged_Name = 1703031047;
  var kPage_TabGroupMoved_Name = 1122353996;
  var kPage_TabGroupClosed_Name = 1754458652;
  var kPage_TabGroupStateChanged_Name = 971732892;
  var kPage_TabCloseCancelled_Name = 1491147824;
  var kPage_TabCreated_Name = 1446767098;
  var kPage_TabRemoved_Name = 158715934;
  var kPage_TabMoved_Name = 141920566;
  var kPage_TabReplaced_Name = 1300369208;
  var kPage_TabActiveChanged_Name = 282810577;
  var kPage_TabUpdated_Name = 1874516901;
  var kPage_TabThumbnailUpdated_Name = 398415847;
  var kPage_ShowContextMenu_Name = 1734105245;

  function PagePtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(Page,
                                                   handleOrPtrInfo);
  }

  function PageAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        Page, associatedInterfacePtrInfo);
  }

  PageAssociatedPtr.prototype =
      Object.create(PagePtr.prototype);
  PageAssociatedPtr.prototype.constructor =
      PageAssociatedPtr;

  function PageProxy(receiver) {
    this.receiver_ = receiver;
  }
  PagePtr.prototype.layoutChanged = function() {
    return PageProxy.prototype.layoutChanged
        .apply(this.ptr.getProxy(), arguments);
  };

  PageProxy.prototype.layoutChanged = function(layout) {
    var params_ = new Page_LayoutChanged_Params();
    params_.layout = layout;
    var builder = new codec.MessageV0Builder(
        kPage_LayoutChanged_Name,
        codec.align(Page_LayoutChanged_Params.encodedSize));
    builder.encodeStruct(Page_LayoutChanged_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PagePtr.prototype.receivedKeyboardFocus = function() {
    return PageProxy.prototype.receivedKeyboardFocus
        .apply(this.ptr.getProxy(), arguments);
  };

  PageProxy.prototype.receivedKeyboardFocus = function() {
    var params_ = new Page_ReceivedKeyboardFocus_Params();
    var builder = new codec.MessageV0Builder(
        kPage_ReceivedKeyboardFocus_Name,
        codec.align(Page_ReceivedKeyboardFocus_Params.encodedSize));
    builder.encodeStruct(Page_ReceivedKeyboardFocus_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PagePtr.prototype.contextMenuClosed = function() {
    return PageProxy.prototype.contextMenuClosed
        .apply(this.ptr.getProxy(), arguments);
  };

  PageProxy.prototype.contextMenuClosed = function() {
    var params_ = new Page_ContextMenuClosed_Params();
    var builder = new codec.MessageV0Builder(
        kPage_ContextMenuClosed_Name,
        codec.align(Page_ContextMenuClosed_Params.encodedSize));
    builder.encodeStruct(Page_ContextMenuClosed_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PagePtr.prototype.longPress = function() {
    return PageProxy.prototype.longPress
        .apply(this.ptr.getProxy(), arguments);
  };

  PageProxy.prototype.longPress = function() {
    var params_ = new Page_LongPress_Params();
    var builder = new codec.MessageV0Builder(
        kPage_LongPress_Name,
        codec.align(Page_LongPress_Params.encodedSize));
    builder.encodeStruct(Page_LongPress_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PagePtr.prototype.tabGroupVisualsChanged = function() {
    return PageProxy.prototype.tabGroupVisualsChanged
        .apply(this.ptr.getProxy(), arguments);
  };

  PageProxy.prototype.tabGroupVisualsChanged = function(groupId, tabGroup) {
    var params_ = new Page_TabGroupVisualsChanged_Params();
    params_.groupId = groupId;
    params_.tabGroup = tabGroup;
    var builder = new codec.MessageV0Builder(
        kPage_TabGroupVisualsChanged_Name,
        codec.align(Page_TabGroupVisualsChanged_Params.encodedSize));
    builder.encodeStruct(Page_TabGroupVisualsChanged_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PagePtr.prototype.tabGroupMoved = function() {
    return PageProxy.prototype.tabGroupMoved
        .apply(this.ptr.getProxy(), arguments);
  };

  PageProxy.prototype.tabGroupMoved = function(groupId, index) {
    var params_ = new Page_TabGroupMoved_Params();
    params_.groupId = groupId;
    params_.index = index;
    var builder = new codec.MessageV0Builder(
        kPage_TabGroupMoved_Name,
        codec.align(Page_TabGroupMoved_Params.encodedSize));
    builder.encodeStruct(Page_TabGroupMoved_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PagePtr.prototype.tabGroupClosed = function() {
    return PageProxy.prototype.tabGroupClosed
        .apply(this.ptr.getProxy(), arguments);
  };

  PageProxy.prototype.tabGroupClosed = function(groupId) {
    var params_ = new Page_TabGroupClosed_Params();
    params_.groupId = groupId;
    var builder = new codec.MessageV0Builder(
        kPage_TabGroupClosed_Name,
        codec.align(Page_TabGroupClosed_Params.encodedSize));
    builder.encodeStruct(Page_TabGroupClosed_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PagePtr.prototype.tabGroupStateChanged = function() {
    return PageProxy.prototype.tabGroupStateChanged
        .apply(this.ptr.getProxy(), arguments);
  };

  PageProxy.prototype.tabGroupStateChanged = function(tabId, index, groupId) {
    var params_ = new Page_TabGroupStateChanged_Params();
    params_.tabId = tabId;
    params_.index = index;
    params_.groupId = groupId;
    var builder = new codec.MessageV0Builder(
        kPage_TabGroupStateChanged_Name,
        codec.align(Page_TabGroupStateChanged_Params.encodedSize));
    builder.encodeStruct(Page_TabGroupStateChanged_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PagePtr.prototype.tabCloseCancelled = function() {
    return PageProxy.prototype.tabCloseCancelled
        .apply(this.ptr.getProxy(), arguments);
  };

  PageProxy.prototype.tabCloseCancelled = function(tabId) {
    var params_ = new Page_TabCloseCancelled_Params();
    params_.tabId = tabId;
    var builder = new codec.MessageV0Builder(
        kPage_TabCloseCancelled_Name,
        codec.align(Page_TabCloseCancelled_Params.encodedSize));
    builder.encodeStruct(Page_TabCloseCancelled_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PagePtr.prototype.tabCreated = function() {
    return PageProxy.prototype.tabCreated
        .apply(this.ptr.getProxy(), arguments);
  };

  PageProxy.prototype.tabCreated = function(tab) {
    var params_ = new Page_TabCreated_Params();
    params_.tab = tab;
    var builder = new codec.MessageV0Builder(
        kPage_TabCreated_Name,
        codec.align(Page_TabCreated_Params.encodedSize));
    builder.encodeStruct(Page_TabCreated_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PagePtr.prototype.tabRemoved = function() {
    return PageProxy.prototype.tabRemoved
        .apply(this.ptr.getProxy(), arguments);
  };

  PageProxy.prototype.tabRemoved = function(tabId) {
    var params_ = new Page_TabRemoved_Params();
    params_.tabId = tabId;
    var builder = new codec.MessageV0Builder(
        kPage_TabRemoved_Name,
        codec.align(Page_TabRemoved_Params.encodedSize));
    builder.encodeStruct(Page_TabRemoved_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PagePtr.prototype.tabMoved = function() {
    return PageProxy.prototype.tabMoved
        .apply(this.ptr.getProxy(), arguments);
  };

  PageProxy.prototype.tabMoved = function(tabId, toIndex, inPinned) {
    var params_ = new Page_TabMoved_Params();
    params_.tabId = tabId;
    params_.toIndex = toIndex;
    params_.inPinned = inPinned;
    var builder = new codec.MessageV0Builder(
        kPage_TabMoved_Name,
        codec.align(Page_TabMoved_Params.encodedSize));
    builder.encodeStruct(Page_TabMoved_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PagePtr.prototype.tabReplaced = function() {
    return PageProxy.prototype.tabReplaced
        .apply(this.ptr.getProxy(), arguments);
  };

  PageProxy.prototype.tabReplaced = function(tabId, newTabId) {
    var params_ = new Page_TabReplaced_Params();
    params_.tabId = tabId;
    params_.newTabId = newTabId;
    var builder = new codec.MessageV0Builder(
        kPage_TabReplaced_Name,
        codec.align(Page_TabReplaced_Params.encodedSize));
    builder.encodeStruct(Page_TabReplaced_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PagePtr.prototype.tabActiveChanged = function() {
    return PageProxy.prototype.tabActiveChanged
        .apply(this.ptr.getProxy(), arguments);
  };

  PageProxy.prototype.tabActiveChanged = function(tabId) {
    var params_ = new Page_TabActiveChanged_Params();
    params_.tabId = tabId;
    var builder = new codec.MessageV0Builder(
        kPage_TabActiveChanged_Name,
        codec.align(Page_TabActiveChanged_Params.encodedSize));
    builder.encodeStruct(Page_TabActiveChanged_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PagePtr.prototype.tabUpdated = function() {
    return PageProxy.prototype.tabUpdated
        .apply(this.ptr.getProxy(), arguments);
  };

  PageProxy.prototype.tabUpdated = function(tab) {
    var params_ = new Page_TabUpdated_Params();
    params_.tab = tab;
    var builder = new codec.MessageV0Builder(
        kPage_TabUpdated_Name,
        codec.align(Page_TabUpdated_Params.encodedSize));
    builder.encodeStruct(Page_TabUpdated_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PagePtr.prototype.tabThumbnailUpdated = function() {
    return PageProxy.prototype.tabThumbnailUpdated
        .apply(this.ptr.getProxy(), arguments);
  };

  PageProxy.prototype.tabThumbnailUpdated = function(tabId, dataUri) {
    var params_ = new Page_TabThumbnailUpdated_Params();
    params_.tabId = tabId;
    params_.dataUri = dataUri;
    var builder = new codec.MessageV0Builder(
        kPage_TabThumbnailUpdated_Name,
        codec.align(Page_TabThumbnailUpdated_Params.encodedSize));
    builder.encodeStruct(Page_TabThumbnailUpdated_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PagePtr.prototype.showContextMenu = function() {
    return PageProxy.prototype.showContextMenu
        .apply(this.ptr.getProxy(), arguments);
  };

  PageProxy.prototype.showContextMenu = function() {
    var params_ = new Page_ShowContextMenu_Params();
    var builder = new codec.MessageV0Builder(
        kPage_ShowContextMenu_Name,
        codec.align(Page_ShowContextMenu_Params.encodedSize));
    builder.encodeStruct(Page_ShowContextMenu_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function PageStub(delegate) {
    this.delegate_ = delegate;
  }
  PageStub.prototype.layoutChanged = function(layout) {
    return this.delegate_ && this.delegate_.layoutChanged && this.delegate_.layoutChanged(layout);
  }
  PageStub.prototype.receivedKeyboardFocus = function() {
    return this.delegate_ && this.delegate_.receivedKeyboardFocus && this.delegate_.receivedKeyboardFocus();
  }
  PageStub.prototype.contextMenuClosed = function() {
    return this.delegate_ && this.delegate_.contextMenuClosed && this.delegate_.contextMenuClosed();
  }
  PageStub.prototype.longPress = function() {
    return this.delegate_ && this.delegate_.longPress && this.delegate_.longPress();
  }
  PageStub.prototype.tabGroupVisualsChanged = function(groupId, tabGroup) {
    return this.delegate_ && this.delegate_.tabGroupVisualsChanged && this.delegate_.tabGroupVisualsChanged(groupId, tabGroup);
  }
  PageStub.prototype.tabGroupMoved = function(groupId, index) {
    return this.delegate_ && this.delegate_.tabGroupMoved && this.delegate_.tabGroupMoved(groupId, index);
  }
  PageStub.prototype.tabGroupClosed = function(groupId) {
    return this.delegate_ && this.delegate_.tabGroupClosed && this.delegate_.tabGroupClosed(groupId);
  }
  PageStub.prototype.tabGroupStateChanged = function(tabId, index, groupId) {
    return this.delegate_ && this.delegate_.tabGroupStateChanged && this.delegate_.tabGroupStateChanged(tabId, index, groupId);
  }
  PageStub.prototype.tabCloseCancelled = function(tabId) {
    return this.delegate_ && this.delegate_.tabCloseCancelled && this.delegate_.tabCloseCancelled(tabId);
  }
  PageStub.prototype.tabCreated = function(tab) {
    return this.delegate_ && this.delegate_.tabCreated && this.delegate_.tabCreated(tab);
  }
  PageStub.prototype.tabRemoved = function(tabId) {
    return this.delegate_ && this.delegate_.tabRemoved && this.delegate_.tabRemoved(tabId);
  }
  PageStub.prototype.tabMoved = function(tabId, toIndex, inPinned) {
    return this.delegate_ && this.delegate_.tabMoved && this.delegate_.tabMoved(tabId, toIndex, inPinned);
  }
  PageStub.prototype.tabReplaced = function(tabId, newTabId) {
    return this.delegate_ && this.delegate_.tabReplaced && this.delegate_.tabReplaced(tabId, newTabId);
  }
  PageStub.prototype.tabActiveChanged = function(tabId) {
    return this.delegate_ && this.delegate_.tabActiveChanged && this.delegate_.tabActiveChanged(tabId);
  }
  PageStub.prototype.tabUpdated = function(tab) {
    return this.delegate_ && this.delegate_.tabUpdated && this.delegate_.tabUpdated(tab);
  }
  PageStub.prototype.tabThumbnailUpdated = function(tabId, dataUri) {
    return this.delegate_ && this.delegate_.tabThumbnailUpdated && this.delegate_.tabThumbnailUpdated(tabId, dataUri);
  }
  PageStub.prototype.showContextMenu = function() {
    return this.delegate_ && this.delegate_.showContextMenu && this.delegate_.showContextMenu();
  }

  PageStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kPage_LayoutChanged_Name:
      var params = reader.decodeStruct(Page_LayoutChanged_Params);
      this.layoutChanged(params.layout);
      return true;
    case kPage_ReceivedKeyboardFocus_Name:
      var params = reader.decodeStruct(Page_ReceivedKeyboardFocus_Params);
      this.receivedKeyboardFocus();
      return true;
    case kPage_ContextMenuClosed_Name:
      var params = reader.decodeStruct(Page_ContextMenuClosed_Params);
      this.contextMenuClosed();
      return true;
    case kPage_LongPress_Name:
      var params = reader.decodeStruct(Page_LongPress_Params);
      this.longPress();
      return true;
    case kPage_TabGroupVisualsChanged_Name:
      var params = reader.decodeStruct(Page_TabGroupVisualsChanged_Params);
      this.tabGroupVisualsChanged(params.groupId, params.tabGroup);
      return true;
    case kPage_TabGroupMoved_Name:
      var params = reader.decodeStruct(Page_TabGroupMoved_Params);
      this.tabGroupMoved(params.groupId, params.index);
      return true;
    case kPage_TabGroupClosed_Name:
      var params = reader.decodeStruct(Page_TabGroupClosed_Params);
      this.tabGroupClosed(params.groupId);
      return true;
    case kPage_TabGroupStateChanged_Name:
      var params = reader.decodeStruct(Page_TabGroupStateChanged_Params);
      this.tabGroupStateChanged(params.tabId, params.index, params.groupId);
      return true;
    case kPage_TabCloseCancelled_Name:
      var params = reader.decodeStruct(Page_TabCloseCancelled_Params);
      this.tabCloseCancelled(params.tabId);
      return true;
    case kPage_TabCreated_Name:
      var params = reader.decodeStruct(Page_TabCreated_Params);
      this.tabCreated(params.tab);
      return true;
    case kPage_TabRemoved_Name:
      var params = reader.decodeStruct(Page_TabRemoved_Params);
      this.tabRemoved(params.tabId);
      return true;
    case kPage_TabMoved_Name:
      var params = reader.decodeStruct(Page_TabMoved_Params);
      this.tabMoved(params.tabId, params.toIndex, params.inPinned);
      return true;
    case kPage_TabReplaced_Name:
      var params = reader.decodeStruct(Page_TabReplaced_Params);
      this.tabReplaced(params.tabId, params.newTabId);
      return true;
    case kPage_TabActiveChanged_Name:
      var params = reader.decodeStruct(Page_TabActiveChanged_Params);
      this.tabActiveChanged(params.tabId);
      return true;
    case kPage_TabUpdated_Name:
      var params = reader.decodeStruct(Page_TabUpdated_Params);
      this.tabUpdated(params.tab);
      return true;
    case kPage_TabThumbnailUpdated_Name:
      var params = reader.decodeStruct(Page_TabThumbnailUpdated_Params);
      this.tabThumbnailUpdated(params.tabId, params.dataUri);
      return true;
    case kPage_ShowContextMenu_Name:
      var params = reader.decodeStruct(Page_ShowContextMenu_Params);
      this.showContextMenu();
      return true;
    default:
      return false;
    }
  };

  PageStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validatePageRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kPage_LayoutChanged_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = Page_LayoutChanged_Params;
      break;
      case kPage_ReceivedKeyboardFocus_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = Page_ReceivedKeyboardFocus_Params;
      break;
      case kPage_ContextMenuClosed_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = Page_ContextMenuClosed_Params;
      break;
      case kPage_LongPress_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = Page_LongPress_Params;
      break;
      case kPage_TabGroupVisualsChanged_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = Page_TabGroupVisualsChanged_Params;
      break;
      case kPage_TabGroupMoved_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = Page_TabGroupMoved_Params;
      break;
      case kPage_TabGroupClosed_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = Page_TabGroupClosed_Params;
      break;
      case kPage_TabGroupStateChanged_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = Page_TabGroupStateChanged_Params;
      break;
      case kPage_TabCloseCancelled_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = Page_TabCloseCancelled_Params;
      break;
      case kPage_TabCreated_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = Page_TabCreated_Params;
      break;
      case kPage_TabRemoved_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = Page_TabRemoved_Params;
      break;
      case kPage_TabMoved_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = Page_TabMoved_Params;
      break;
      case kPage_TabReplaced_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = Page_TabReplaced_Params;
      break;
      case kPage_TabActiveChanged_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = Page_TabActiveChanged_Params;
      break;
      case kPage_TabUpdated_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = Page_TabUpdated_Params;
      break;
      case kPage_TabThumbnailUpdated_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = Page_TabThumbnailUpdated_Params;
      break;
      case kPage_ShowContextMenu_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = Page_ShowContextMenu_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validatePageResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var Page = {
    name: 'tab_strip.mojom.Page',
    kVersion: 0,
    ptrClass: PagePtr,
    proxyClass: PageProxy,
    stubClass: PageStub,
    validateRequest: validatePageRequest,
    validateResponse: null,
  };
  PageStub.prototype.validator = validatePageRequest;
  PageProxy.prototype.validator = null;
  exports.TabNetworkState = TabNetworkState;
  exports.TabAlertState = TabAlertState;
  exports.Tab = Tab;
  exports.TabGroupVisualData = TabGroupVisualData;
  exports.PageHandlerFactory = PageHandlerFactory;
  exports.PageHandlerFactoryPtr = PageHandlerFactoryPtr;
  exports.PageHandlerFactoryAssociatedPtr = PageHandlerFactoryAssociatedPtr;
  exports.PageHandler = PageHandler;
  exports.PageHandlerPtr = PageHandlerPtr;
  exports.PageHandlerAssociatedPtr = PageHandlerAssociatedPtr;
  exports.Page = Page;
  exports.PagePtr = PagePtr;
  exports.PageAssociatedPtr = PageAssociatedPtr;
})();